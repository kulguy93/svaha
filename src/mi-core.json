{
  "swagger": "2.0",
  "info": {
    "version": "v2",
    "title": "MI",
    "description": ""
  },
  "host": "api-01-dev.oek.infotech.team",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "token": {
      "name": "token",
      "type": "apiKey",
      "in": "query"
    }
  },
  "paths": {
    "/organizations/{id}/issues/types": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "get-org-issue-type",
        "summary": "Получить тип заявки для организации",
        "tags": [
          "Types"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Type"
              }
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/organizations": {
      "get": {
        "operationId": "get-organizations",
        "summary": "Список организаций",
        "tags": [
          "Organizations",
          "Оргштатная структура"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "description": "Список организаций",
              "items": {
                "$ref": "#/definitions/mi-organization"
              }
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Кол-во элементов в результате",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Смещение относительно начала выборки",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Фильтр",
            "type": "string"
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/mi-organization"
            }
          }
        },
        "operationId": "create-organisation",
        "tags": [
          "Organizations"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/mi-organization"
            }
          }
        ]
      }
    },
    "/organizations/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "get": {
        "operationId": "get-organization",
        "summary": "Организация по идентификатору",
        "tags": [
          "Organizations",
          "Оргштатная структура"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/mi-organization"
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/mi-organization"
            }
          }
        },
        "operationId": "update-organisation",
        "tags": [
          "Organizations"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/mi-organization"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "delete-organisation",
        "tags": [
          "Organizations"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ]
      }
    },
    "/users/current": {
      "get": {
        "operationId": "get-current-user",
        "summary": "Текущий пользователь",
        "tags": [
          "Users",
          "Пользователи"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/issues/accesses": {
      "get": {
        "operationId": "get-issues-accesses",
        "summary": "Информации о доступе",
        "tags": [
          "Security",
          "Разграничение доступа"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessInfo"
              }
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/issues/states": {
      "get": {
        "operationId": "get-issues-states",
        "summary": "Состояния заявок",
        "tags": [
          "Security",
          "Разграничение доступа"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/State"
              }
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/issues/{id}/lock": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ИД заявки",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "operationId": "lock",
        "summary": "Заблокировать заявку",
        "tags": [
          "Issues",
          "Блокировка заявок"
        ],
        "description": "Блокирует заявку",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/IssueLockAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IssueLock"
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "409": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/issues/{id}/unlock": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ИД заявки",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "operationId": "unlock",
        "summary": "Разблокировать заявку",
        "tags": [
          "Issues",
          "Блокировка заявок"
        ],
        "description": "Разблокирует заявку",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/IssueUnlockAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IssueLock"
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "409": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/issues/{id}/locks": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ИД заявки",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "getActiveLocks",
        "summary": "Список активных блокировок по заявке",
        "tags": [
          "Issues",
          "Блокировка заявок"
        ],
        "description": "Возвращает массив активных блокировок",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IssueLock"
              }
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/issues/locks/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ИД блокировки",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "getLock",
        "summary": "Информация о блокировке",
        "tags": [
          "Issues",
          "Блокировка заявок"
        ],
        "description": "Возвращает информацию о блокировоке",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IssueLock"
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/issues": {
      "post": {
        "operationId": "create-issue",
        "summary": "Создать заявку",
        "tags": [
          "Issues",
          "Заявки"
        ],
        "parameters": [
          {
            "name": "sandbox",
            "in": "query",
            "description": "Признак сохранения в БД",
            "type": "boolean"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/NewIssue",
              "example": {
                "typeId": -96018327,
                "assignedUserId": -1859064,
                "point": {
                  "geom": {
                    "type": "commodo nulla",
                    "coordinates": [
                      -84243029,
                      89329965
                    ]
                  },
                  "address": "in"
                },
                "assignedDateFrom": -34748342,
                "assignedDateTo": -53706870,
                "createDate": -21422053,
                "text": "exercitation voluptate",
                "priorityId": 53693194,
                "customFields": {},
                "parentId": -98691903,
                "customerIds": [
                  -83031880
                ],
                "statusId": -83393181,
                "photos": [
                  {
                    "uuidOriginal": "culpa",
                    "description": "fugiat ad mollit occaecat aliqua"
                  },
                  {
                    "updateDate": 15194171,
                    "description": "dolor",
                    "extension": "aliquip dolore nisi esse",
                    "name": "officia fugiat"
                  },
                  {
                    "uuidOriginal": "aliqua tempor fugiat",
                    "uuid": "ipsum esse dolor in",
                    "extension": "ut Lorem Ut cupidatat ullamco",
                    "order": -53526021,
                    "customFields": {}
                  },
                  {
                    "id": 95225819,
                    "fileType": {
                      "id": -44753050,
                      "type": "amet Excepteur officia i"
                    }
                  },
                  {}
                ],
                "videos": [
                  {
                    "uuidOriginal": "non nisi magna",
                    "extension": "exercitation dolor ad et mollit"
                  },
                  {
                    "extension": "volupt",
                    "updateDate": 51596825,
                    "order": -58859807,
                    "uuidOriginal": "al"
                  },
                  {
                    "fileType": {
                      "id": -74885617,
                      "type": "culpa nisi "
                    },
                    "extension": "culpa consectetur tempor",
                    "uuidOriginal": "Lorem do"
                  },
                  {
                    "uuidOriginal": "in in nostrud sed velit"
                  }
                ],
                "sounds": [
                  {},
                  {
                    "fileType": {
                      "id": -92101200,
                      "type": "Excepteur v"
                    },
                    "updateDate": -41823847,
                    "customFields": {},
                    "name": "fugiat magna pariatur adipisicing",
                    "description": "do ut ullamco irure",
                    "extension": "aliqua minim",
                    "uuid": "sit",
                    "order": 49700517
                  },
                  {
                    "description": "veniam",
                    "uuid": "sed culpa nulla mollit cupidatat",
                    "customFields": {}
                  }
                ],
                "files": [
                  {},
                  {
                    "uuid": "laboris cupidatat laborum ut officia",
                    "customFields": {},
                    "description": "sed aliquip pariatur"
                  },
                  {
                    "extension": "dolore voluptate nulla in Excepteur",
                    "fileType": {
                      "id": 37655360,
                      "type": "in sed veniam ea"
                    },
                    "uuidOriginal": "eu labore officia sed",
                    "updateDate": 52765801,
                    "id": 32588821,
                    "description": "sunt non Lorem dolor sed"
                  },
                  {
                    "order": -547897,
                    "fileType": {
                      "id": 14716806,
                      "type": "commodo Duis anim proident"
                    },
                    "id": -44447133,
                    "name": "officia culpa magna velit conseq",
                    "updateDate": -81145420,
                    "uuidOriginal": "aute ipsum adipisicing dolore fugiat",
                    "extension": "dolore elit in qui",
                    "uuid": "dolor",
                    "description": "sunt ullamco "
                  },
                  {
                    "name": "deserunt sed voluptate Excepteur",
                    "order": 39760872,
                    "id": -62101641,
                    "customFields": {},
                    "fileType": {
                      "id": 62986197,
                      "type": "proident"
                    },
                    "uuidOriginal": "ex cupidatat",
                    "description": "sed"
                  }
                ],
                "newCustomers": [
                  {},
                  {},
                  {
                    "name": "reprehenderit aute veniam",
                    "addresses": [
                      {
                        "id": 56019474,
                        "geom": {
                          "type": "amet",
                          "coordinates": [
                            -34796042,
                            -60083994
                          ]
                        }
                      }
                    ],
                    "phone": "cillum in",
                    "email": "sed"
                  },
                  {},
                  {
                    "comment": "ipsum in Ut",
                    "email": "ipsum id"
                  }
                ]
              }
            },
            "x-examples": {}
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Issue"
            },
            "examples": {
              "application/json": {}
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "get": {
        "operationId": "get-issues",
        "summary": "Список заявок",
        "tags": [
          "Issues",
          "Заявки"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Кол-во элементов в результате",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Смещение относительно начала выборки",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Фильтр",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Issue"
              }
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/issues/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Идентификатор заявки",
          "required": true,
          "type": "string",
          "minimum": 0
        }
      ],
      "get": {
        "operationId": "get-issue",
        "summary": "Заявка по идентификатору",
        "tags": [
          "Issues",
          "Заявки"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Issue"
            },
            "examples": {
              "application/json": {
                "id": 655,
                "createDate": 1498048820467,
                "text": "test: com.gradoservice.mapissues.impl.IssueWithCustomFieldTest.getCustomfields:54",
                "updateDate": 1498048820517,
                "customers": [
                  {
                    "id": 736,
                    "name": "пользователь",
                    "deleted": true
                  }
                ],
                "assignedDateFrom": 1498048821668,
                "assignedDateTo": 1498048832779,
                "point": {
                  "id": 655,
                  "geom": {
                    "coordinates": [
                      37.4549
                    ],
                    "type": "Point"
                  },
                  "zoom": 12,
                  "address": "Аминьевский мост"
                },
                "files": [],
                "comments": [],
                "typeId": 1,
                "customerNameString": "пользователь",
                "organizationId": 1,
                "userId": 1,
                "priorityId": 1,
                "assignedOrganizationId": 1,
                "assignedUserId": 1,
                "statusId": 1,
                "groupId": 1,
                "childIds": [],
                "parentId": null,
                "viewed": false,
                "photos": [],
                "commentFileIds": [],
                "audios": [],
                "sounds": [],
                "videos": [],
                "creatorGroupId": 1,
                "workflowId": 1,
                "customFields": {}
              }
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "put": {
        "operationId": "update-issue",
        "summary": "Обновить заявку",
        "tags": [
          "Issues",
          "Заявки"
        ],
        "parameters": [
          {
            "name": "sandbox",
            "in": "query",
            "description": "Признак сохранения в БД",
            "type": "boolean"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/IssueUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Issue"
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "patch": {
        "operationId": "patch-issue",
        "summary": "Частично обновить заявку",
        "tags": [
          "Issues",
          "Заявки"
        ],
        "parameters": [
          {
            "name": "force",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/IssuePatch",
              "example": {
                "text": "156f830e-ed20-43b6-a22a-eb53dabaa687",
                "point": {
                  "geom": {
                    "type": "Point",
                    "coordinates": [
                      0.8397066706104386,
                      0.2420453777130811
                    ]
                  },
                  "address": "519eec2c-bc66-41f3-a419-0d321db75e07",
                  "zoom": 6
                },
                "priorityId": 1,
                "statusId": 5,
                "createDate": 1498129800465,
                "updateDate": 1498129800465,
                "assignedDateFrom": 1498129801465,
                "assignedDateTo": 1498129851465,
                "id": 633,
                "customFields": {},
                "typeId": 1,
                "customerIds": [
                  1287
                ],
                "assignedUserId": 102
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Issue"
            },
            "examples": {
              "application/json": {
                "id": 633,
                "createDate": 1498048808559,
                "text": "156f830e-ed20-43b6-a22a-eb53dabaa687",
                "updateDate": 1498132203126,
                "customers": [
                  {
                    "id": 1287,
                    "name": "пользователь",
                    "deleted": false
                  }
                ],
                "assignedDateFrom": 1498119545612,
                "assignedDateTo": 1498119556923,
                "point": {
                  "id": 633,
                  "geom": {
                    "coordinates": [
                      0.8397066706
                    ],
                    "type": "Point"
                  },
                  "zoom": 6,
                  "address": "519eec2c-bc66-41f3-a419-0d321db75e07"
                },
                "files": [],
                "comments": [],
                "typeId": 1,
                "customerNameString": "пользователь",
                "organizationId": 1,
                "userId": 1,
                "priorityId": 1,
                "assignedOrganizationId": 1,
                "assignedUserId": 102,
                "statusId": 5,
                "groupId": 1,
                "childIds": [],
                "parentId": null,
                "viewed": false,
                "photos": [],
                "commentFileIds": [],
                "audios": [],
                "sounds": [],
                "videos": [],
                "creatorGroupId": 1,
                "workflowId": 1,
                "customFields": {}
              }
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "delete": {
        "operationId": "delete-issue",
        "summary": "Удалить заявку",
        "tags": [
          "Issues",
          "Заявки"
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "type": "null"
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/issues/{id}/viewed": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Идентификатор заявки",
          "required": true,
          "type": "string",
          "minimum": 0
        }
      ],
      "put": {
        "operationId": "mark-issue-viewed",
        "summary": "Отметить заявку как просмотренную",
        "tags": [
          "Issues",
          "Заявки"
        ],
        "consumes": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Issue"
            },
            "examples": {
              "application/json": {
                "id": 655,
                "createDate": 1498048820467,
                "text": "test: com.gradoservice.mapissues.impl.IssueWithCustomFieldTest.getCustomfields:54",
                "updateDate": 1498127414094,
                "customers": [
                  {
                    "id": 736,
                    "name": "пользователь",
                    "deleted": true
                  }
                ],
                "assignedDateFrom": 1498048821668,
                "assignedDateTo": 1498048832779,
                "point": {
                  "id": 655,
                  "geom": {
                    "coordinates": [
                      37.4549
                    ],
                    "type": "Point"
                  },
                  "zoom": 12,
                  "address": "Аминьевский мост"
                },
                "files": [],
                "comments": [],
                "typeId": 1,
                "customerNameString": "пользователь",
                "organizationId": 1,
                "userId": 1,
                "priorityId": 1,
                "assignedOrganizationId": 1,
                "assignedUserId": 1,
                "statusId": 1,
                "groupId": 1,
                "childIds": [],
                "parentId": null,
                "viewed": true,
                "photos": [],
                "commentFileIds": [],
                "audios": [],
                "sounds": [],
                "videos": [],
                "creatorGroupId": 1,
                "workflowId": 1,
                "customFields": {
                  "id": 618,
                  "values": {}
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        }
      }
    },
    "/issues/archive": {
      "get": {
        "operationId": "get-archived",
        "summary": "Архив заявок",
        "tags": [
          "Issues",
          "Заявки"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Issue"
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "type": "string",
            "description": "Фильтр"
          }
        ]
      }
    },
    "/issues/{id}/duplicate": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Идентификатор заявки",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "dublicate-issue",
        "summary": "Cоздание дубликата заявки",
        "tags": [
          "Issues",
          "Заявки"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Issue"
            },
            "examples": {
              "application/json": {
                "id": 1208,
                "createDate": 1498134456783,
                "text": "test: com.gradoservice.mapissues.impl.IssueTest.testCreateStatus:75",
                "updateDate": 1498134456800,
                "customers": [
                  {
                    "id": 734,
                    "name": "пользователь",
                    "deleted": true
                  }
                ],
                "assignedDateFrom": 1498048819893,
                "assignedDateTo": 1498048831004,
                "point": {
                  "id": 1208,
                  "geom": {
                    "coordinates": [
                      37.4549
                    ],
                    "type": "Point"
                  },
                  "zoom": 12,
                  "address": "Аминьевский мост"
                },
                "files": [],
                "comments": [],
                "typeId": 1,
                "customerNameString": "пользователь",
                "organizationId": 1,
                "userId": 1,
                "priorityId": 1,
                "assignedOrganizationId": 1,
                "assignedUserId": 1,
                "statusId": 1,
                "groupId": 1,
                "childIds": [],
                "parentId": null,
                "viewed": false,
                "photos": [],
                "commentFileIds": [],
                "audios": [],
                "sounds": [],
                "videos": [],
                "creatorGroupId": 1,
                "workflowId": 1,
                "customFields": {}
              }
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        }
      }
    },
    "/issues/{id}/files": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "operationId": "add-file",
        "summary": "Добавить вложение",
        "tags": [
          "Files",
          "Вложения заявки"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/NewIssueFile",
              "example": {
                "order": 12430,
                "name": "quis nisi",
                "extension": "mollit deserunt sint voluptate",
                "description": "ut pariatur",
                "uuidOriginal": "fugiat adipisicing amet dolore",
                "uuid": "ea anim",
                "updateDate": -29455177,
                "customFields": {},
                "fileType": {
                  "id": -96069374,
                  "type": "incididunt"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IssueFile"
            },
            "examples": {
              "application/json": [
                {
                  "id": 379,
                  "order": 1,
                  "name": "24c5157d-120d-4819-aa1c-2a2c9f5fa5ef",
                  "extension": "PNG",
                  "description": "Cats",
                  "uuidOriginal": "b08990f4-bc9e-45b3-86ea-1c3eec5934f1",
                  "uuidLarge": null,
                  "uuidMedium": null,
                  "uuidSmall": null,
                  "geom": null,
                  "geometry": null,
                  "uuid": "b08990f4-bc9e-45b3-86ea-1c3eec5934f1",
                  "updateDate": 1498137595378,
                  "customFields": {},
                  "fileTypeId": 2
                }
              ]
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "get": {
        "operationId": "get-files",
        "summary": "Список вложений",
        "tags": [
          "Files",
          "Вложения заявки"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IssueFile"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 379,
                  "order": 1,
                  "name": "24c5157d-120d-4819-aa1c-2a2c9f5fa5ef",
                  "extension": "PNG",
                  "description": "Cats",
                  "uuidOriginal": "b08990f4-bc9e-45b3-86ea-1c3eec5934f1",
                  "uuidLarge": null,
                  "uuidMedium": null,
                  "uuidSmall": null,
                  "geom": null,
                  "geometry": null,
                  "uuid": "b08990f4-bc9e-45b3-86ea-1c3eec5934f1",
                  "updateDate": 1498137595378,
                  "customFields": {},
                  "fileTypeId": 2
                }
              ]
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/issues/{id}/files/{fileId}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "fileId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "get-file-by-id",
        "summary": "Вложение по идентификатору",
        "tags": [
          "Files",
          "Вложения заявки"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IssueFile"
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "delete": {
        "operationId": "delete-file",
        "summary": "Удалить вложение",
        "tags": [
          "Files",
          "Вложения заявки"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeletedId"
            },
            "examples": {
              "application/json": {
                "id": 415
              }
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/issues/types": {
      "post": {
        "operationId": "create-issue-type",
        "summary": "Создать новый тип",
        "tags": [
          "Types",
          "Типы заявок"
        ],
        "description": "Добавление нового типа заявки",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/NewType"
            }
          },
          {
            "in": "query",
            "name": "autoCreateWorkflow",
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Type"
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "get": {
        "operationId": "get-issue-types",
        "summary": "Список типов заявки",
        "tags": [
          "Types",
          "Типы заявок"
        ],
        "description": "Список типов заявки для текущего пользователя",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Type"
              }
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Кол-во элементов в результате",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Смещение относительно начала выборки",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Фильтр",
            "type": "string"
          }
        ]
      }
    },
    "/issues/types/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Идентификатор типа задачи.",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "get-issue-type",
        "summary": "Получить тип заявки",
        "tags": [
          "Types",
          "Типы заявок"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Type"
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "put": {
        "operationId": "update-issue-type",
        "summary": "Изменить тип заявки",
        "tags": [
          "Types",
          "Типы заявок"
        ],
        "description": "Изменение типа заявки по идентификатору",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TypeUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Type"
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "delete": {
        "operationId": "delete-issue-type",
        "summary": "Удалить тип заявки",
        "tags": [
          "Types",
          "Типы заявок"
        ],
        "description": "Удалить тип заявки",
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "type": "null"
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/issues/priorities": {
      "post": {
        "operationId": "create-priority",
        "summary": "Добавить приоритет",
        "tags": [
          "Priorities",
          "Приоритеты заявок"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/NewPriority"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Priority"
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "get": {
        "operationId": "get-priorities",
        "summary": "Список приоритетов",
        "tags": [
          "Priorities",
          "Приоритеты заявок"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Priority"
              }
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Кол-во элементов в результате",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Смещение относительно начала выборки",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Фильтр",
            "type": "string"
          }
        ]
      }
    },
    "/issues/priorities/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Идентификатор",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "get-priority",
        "summary": "Приоритет по идентификатору",
        "tags": [
          "Priorities",
          "Приоритеты заявок"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Priority"
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "put": {
        "operationId": "update-priority",
        "summary": "Обновить приоритет",
        "tags": [
          "Priorities",
          "Приоритеты заявок"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/NewPriority"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Priority"
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "delete": {
        "operationId": "delete-priority",
        "summary": "Удалить приоритет",
        "tags": [
          "Priorities",
          "Приоритеты заявок"
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "type": "null"
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/workflows/all/transitions": {
      "get": {
        "operationId": "get-all-transitions",
        "summary": "Список всех переходов",
        "tags": [
          "Workflows",
          "Жизненный цикл"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransitionInfo"
              }
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        }
      }
    },
    "/workflows/{id}/transitions": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Идентификатор",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "get-transitions",
        "summary": "Список переходов для ЖЦ",
        "tags": [
          "Workflows",
          "Жизненный цикл"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transition"
              }
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        }
      }
    },
    "/issues/statuses": {
      "get": {
        "operationId": "get-statuses",
        "summary": "Получить все статусы",
        "tags": [
          "statuses"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Status"
              }
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Кол-во элементов в результате",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Смещение относительно начала выборки",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Фильтр",
            "type": "string"
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "operationId": "create status",
        "tags": [
          "statuses"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NewIssueStatus"
            }
          }
        ],
        "summary": "Создать статус"
      }
    },
    "/issues/{issueId}/comments": {
      "parameters": [
        {
          "name": "issueId",
          "in": "path",
          "description": "Идентификатор задачи.",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "get-comments",
        "summary": "Получить комментарии",
        "tags": [
          "Comments",
          "Комментарии"
        ],
        "description": "Получить список всех комментариев задачи.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "description": "Массив комментариев",
              "items": {
                "$ref": "#/definitions/Comment"
              }
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "post": {
        "operationId": "add-comment",
        "summary": "Добавить комментарий",
        "tags": [
          "Comments",
          "Комментарии"
        ],
        "description": "Добавление комментария к задаче.\n\nНа текущий момент содержит дублирование issueId в параметрах и адресе запроса (параметр из адреса игнорируется).",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/NewComment",
              "example": {
                "issueId": 12073777,
                "comment": "Ut Excepteur eu",
                "coordinates": [
                  {
                    "address": "voluptate culpa"
                  },
                  {
                    "geom": null
                  },
                  {
                    "geom": {}
                  },
                  {}
                ],
                "files": [
                  {
                    "id": -76279514,
                    "name": "tempor aliqua dolore Ut"
                  },
                  {
                    "id": -66631181,
                    "name": "et ad magna ut",
                    "fileType": {
                      "id": -35283792,
                      "type": "et labore magna consectetur"
                    },
                    "description": "elit cillum"
                  },
                  {
                    "id": 43836432,
                    "name": "id pariatur"
                  }
                ],
                "photos": [
                  {
                    "id": -31064198,
                    "name": "non dolor sit",
                    "geom": {}
                  },
                  {
                    "id": 2228009,
                    "name": "id sit do",
                    "description": "commodo veniam"
                  }
                ],
                "videos": [
                  {
                    "id": -574735,
                    "name": "nostrud Excepteur dolor",
                    "description": "laborum"
                  },
                  {
                    "id": 14602123,
                    "name": "aliquip culpa commodo dolor",
                    "fileType": {
                      "id": -81462201,
                      "type": "nostrud Duis reprehenderit laborum do"
                    },
                    "order": -61830930
                  }
                ],
                "sounds": [
                  {
                    "id": -64042718,
                    "name": "Ut culpa",
                    "fileType": {
                      "id": -26650222,
                      "type": "quis exercitation"
                    },
                    "order": -99065615,
                    "uuid": "Lorem ullamco"
                  },
                  {
                    "id": 57845243,
                    "name": "dolore",
                    "geom": {},
                    "fileType": {
                      "id": 19562950,
                      "type": "qui Excepteur in elit nulla"
                    },
                    "uuid": "se"
                  },
                  {
                    "id": 23754697,
                    "name": "sed dolor",
                    "order": -92989749,
                    "uuid": "aliqua consectetur occaecat"
                  },
                  {
                    "id": 11742245,
                    "name": "id enim dolor ipsum adipisicing",
                    "description": "in ",
                    "fileType": {
                      "id": -3354640,
                      "type": "et"
                    },
                    "order": 48401965
                  },
                  {
                    "id": -40630761,
                    "name": "ea deserunt",
                    "order": 3508990,
                    "geom": null
                  }
                ],
                "referenceId": -63044744,
                "uuid": null
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Comment"
            },
            "examples": {
              "application/json": {
                "id": -58630259,
                "issueId": -45963572,
                "comment": "anim",
                "date": -70458865,
                "referenceId": 88478181,
                "files": [
                  {
                    "id": 2620604,
                    "uuid": "in occaecat labore",
                    "name": "Duis reprehenderit ad enim irure",
                    "fileTypeId": 91361334,
                    "uuidOriginal": "deserunt culpa occaecat ad"
                  },
                  {
                    "id": 18504379,
                    "uuid": "mollit",
                    "name": "occaecat ex qui",
                    "fileTypeId": 51921421,
                    "uuidOriginal": "Excepteur",
                    "uuidMedium": "ullamco consectetur laboris",
                    "description": "dol",
                    "geom": null
                  },
                  {
                    "id": -89768071,
                    "uuid": "occaecat",
                    "name": "nulla dolore",
                    "fileTypeId": 32703491,
                    "description": "nisi",
                    "uuidSmall": "aliqua sit esse ",
                    "uuidLarge": "velit",
                    "uuidMedium": "voluptate consecte"
                  }
                ],
                "coordinates": [
                  {},
                  {
                    "address": "sed sit Excepteur dolo"
                  },
                  {
                    "address": "dolor veniam adipisicing"
                  },
                  {
                    "geom": {
                      "type": "aute ullamco qui",
                      "coordinates": [
                        -69392314
                      ]
                    }
                  }
                ],
                "userInfo": {
                  "id": -29810591,
                  "userGroupId": 65078650,
                  "name": "ci",
                  "photo": null
                },
                "level": null,
                "uuid": "8c64f272-d23b-44a3-b1bb-1f7442fd7fa7"
              }
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/issues/{issueId}/comments/{commentId}": {
      "parameters": [
        {
          "name": "issueId",
          "in": "path",
          "description": "Идентификатор задачи.",
          "required": true,
          "type": "string"
        },
        {
          "name": "commentId",
          "in": "path",
          "description": "Идентификатор комментария.",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "operationId": "remove-comment",
        "summary": "Удалить комментарий",
        "tags": [
          "Comments",
          "Комментарии"
        ],
        "description": "Удалить комментарий.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeletedComment"
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/customfields": {
      "get": {
        "operationId": "get-custom-fields",
        "summary": "Список доп. полей",
        "tags": [
          "CustomFields",
          "Дополнительные поля"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomField"
              }
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Фильтр",
            "type": "string"
          }
        ]
      }
    },
    "/customfields/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Идентификатор",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "get-custom-field",
        "summary": "Доп. поле по идентификатору",
        "tags": [
          "CustomFields",
          "Дополнительные поля"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "put": {
        "operationId": "update-custom-field",
        "summary": "Обновить доп. поле",
        "tags": [
          "CustomFields",
          "Дополнительные поля"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CustomFieldUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/issues/customers": {
      "get": {
        "operationId": "get-customers",
        "summary": "Cписок заказчиков",
        "tags": [
          "Customers",
          "Заказчики"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Кол-во элементов в результате",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Смещение относительно начала выборки",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Фильтр",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "description": "Массив пользователей",
              "items": {
                "$ref": "#/definitions/Customer"
              }
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "post": {
        "operationId": "create-customer",
        "summary": "Создание нового заказчика",
        "tags": [
          "Customers",
          "Заказчики"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/NewCustomer",
              "example": {
                "id": 0,
                "name": "пользователь",
                "phone": "11111111",
                "email": "sdfsdf@re.ru",
                "addresses": [
                  {
                    "id": 0,
                    "address": "кудыкина гора",
                    "geom": {
                      "type": "Point",
                      "coordinates": [
                        3,
                        2
                      ]
                    }
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Customer"
            },
            "examples": {
              "application/json": {
                "id": 1367,
                "name": "пользователь",
                "phone": "11111111",
                "email": "sdfsdf@re.ru",
                "comment": null,
                "addresses": [
                  {
                    "id": 1367,
                    "geom": {
                      "coordinates": [
                        3,
                        2
                      ],
                      "type": "Point"
                    },
                    "address": "кудыкина гора"
                  }
                ],
                "isSystem": false,
                "issuesCount": 0,
                "organizationId": 1
              }
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/organizations/{id}/customers": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Идентификатор",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "get-customers-by-org-id",
        "summary": "Заказчики в организации",
        "tags": [
          "Customers",
          "Заказчики"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Customer"
              }
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        }
      }
    },
    "/issues/customers/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "put": {
        "operationId": "update-customer",
        "summary": "Редактирование заказчика",
        "tags": [
          "Customers",
          "Заказчики"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/NewCustomer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "delete": {
        "operationId": "remove-customer",
        "summary": "Удаление пользователя",
        "tags": [
          "Customers",
          "Заказчики"
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "type": "null"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Получить заказчика по идентификатору",
        "tags": [
          "Customers",
          "Заказчики"
        ],
        "operationId": "get-issue-customer-by-id",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/issues/export/{format}": {
      "parameters": [
        {
          "name": "format",
          "in": "path",
          "description": "Формат экспорта",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "export-issues",
        "summary": "Экспорт нескольких заявок",
        "tags": [
          "Экспорт заявок"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен для авторизации",
            "type": "string"
          },
          {
            "name": "issueIds",
            "in": "query",
            "description": "Список идентификаторов заявок",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/issues/{id}/export/{format}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Идентификатор заявки",
          "required": true,
          "type": "string"
        },
        {
          "name": "format",
          "in": "path",
          "description": "Формат экспорта",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "export-issue",
        "summary": "Экспорт заявки",
        "tags": [
          "Экспорт заявок"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен для авторизации",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "operationId": "get-version",
        "summary": "Версия сервиса",
        "tags": [
          "Misc",
          "Разное"
        ],
        "description": "Возвращает информацию о версии и дате сборки сервиса",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VersionInfo"
            }
          },
          "400": {
            "$ref": "#/responses/trait:commonErrors:400"
          },
          "401": {
            "$ref": "#/responses/trait:commonErrors:401"
          },
          "403": {
            "$ref": "#/responses/trait:commonErrors:403"
          },
          "500": {
            "$ref": "#/responses/trait:commonErrors:500"
          }
        }
      }
    },
    "/issues/comments/groups": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommentGroup"
              }
            }
          }
        },
        "summary": "Получить список групп комментариев",
        "operationId": "get-comment-groups",
        "tags": [
          "comments"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Кол-во элементов в результате",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Смещение относительно начала выборки",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Фильтр",
            "type": "string"
          }
        ]
      }
    },
    "/issues/{id}/accesses": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ObjectAccesses"
            }
          }
        },
        "operationId": "geIssueAccesses",
        "tags": [
          "accesses"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true,
            "format": "int64"
          }
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/issues/comments/{id}/accesses": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ObjectAccesses"
            }
          }
        },
        "operationId": "getCommentAccesses",
        "tags": [
          "accesses"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true,
            "format": "int64"
          }
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/workflows": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Workflow"
              }
            }
          }
        },
        "tags": [
          "workflows"
        ],
        "operationId": "get-workflows",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Кол-во элементов в результате",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Смещение относительно начала выборки",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Фильтр",
            "type": "string"
          }
        ],
        "summary": "Получить список жц"
      },
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Создать жц",
        "operationId": "create-workflow",
        "tags": [
          "workflows"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NewWorflow"
            }
          }
        ]
      }
    },
    "/issues/statuses/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "summary": "Получить статус по идентификатору",
        "operationId": "get-status-by-id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true,
            "format": "int64"
          }
        ],
        "tags": [
          "statuses"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "summary": "Обновить статус ",
        "operationId": "update-status",
        "tags": [
          "statuses"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true,
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NewIssueStatus"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "type": "null"
            }
          }
        },
        "summary": "Удалить по идентификатору",
        "tags": [
          "statuses"
        ],
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/workflows/transitions": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Transition"
            }
          }
        },
        "summary": "получить все переходы",
        "operationId": "get-workflow-transitions",
        "tags": [
          "transitions"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Кол-во элементов в результате",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Смещение относительно начала выборки",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Фильтр",
            "type": "string"
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Transition"
            }
          }
        },
        "summary": "создать переход",
        "operationId": "create-transition",
        "tags": [
          "transitions"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NewTransition"
            }
          }
        ]
      }
    },
    "/workflows/statuses": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkflowStatus"
              }
            }
          }
        },
        "operationId": "get-workflow-statuses",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "tags": [
          "workflows"
        ],
        "summary": "Получить список статусов",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Кол-во элементов в результате",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Смещение относительно начала выборки",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Фильтр",
            "type": "string"
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WorkflowStatus"
            }
          }
        },
        "operationId": "create-workflowstatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NewWorkflowStatus"
            }
          }
        ],
        "tags": [
          "workflows"
        ],
        "summary": "Создать статус"
      }
    },
    "/oauth/code_flow/access_token": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessToken"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "get-accessToken-by-code",
        "tags": [
          "oauth"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "redirect_uri": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "redirect_uri"
              ]
            }
          }
        ]
      }
    },
    "/workflows/transitions/{id}": {
      "delete": {
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "type": "null"
            }
          }
        },
        "operationId": "delete-transition",
        "tags": [
          "transitions"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "format": "int64"
          }
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Transition"
            }
          }
        },
        "summary": "Получить переход по идентификатору",
        "operationId": "get-workflow-transition-by-id",
        "tags": [
          "transitions"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Transition"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Обновить переход по идентификатору",
        "operationId": "update-transition-by-id",
        "tags": [
          "transitions"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NewTransition"
            }
          }
        ]
      }
    },
    "/scripting/points": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScriptingPoint"
              }
            }
          }
        },
        "summary": "Получение всех доступных точек расширения",
        "operationId": "getScriptingPoints",
        "tags": [
          "scripting"
        ],
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/scripting/drools/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DroolsScript"
              }
            }
          }
        },
        "operationId": "getDroolsScripts",
        "tags": [
          "scripting"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "summary": "Получение всех загруженный Drools скриптов",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Кол-во элементов в результате",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Смещение относительно начала выборки",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Фильтр",
            "type": "string"
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DroolsScript"
            }
          }
        },
        "operationId": "createDroolsScript",
        "tags": [
          "scripting"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NewDroolsScript"
            }
          }
        ],
        "summary": "Загрузка Drools скрипта"
      }
    },
    "/scripting/drools/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DroolsScript"
            }
          }
        },
        "operationId": "getDroolsScript",
        "tags": [
          "scripting"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [],
        "summary": "Получение Drools скрипта"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DroolsScript"
            }
          }
        },
        "operationId": "updateDroolsScript",
        "tags": [
          "scripting"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NewDroolsScript"
            }
          }
        ],
        "summary": "Обновление Drools скрипта"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "type": "null"
            }
          }
        },
        "operationId": "deleteDroolsScript",
        "security": [
          {
            "token": []
          }
        ],
        "tags": [
          "scripting"
        ],
        "summary": "Удаление Drools скрипта"
      }
    },
    "/scripting/drools/{id}/raw": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "getDroolsScriptContent",
        "tags": [
          "scripting"
        ],
        "produces": [
          "text/plain"
        ],
        "summary": "Получение содерживого Drools скрипта"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/audit": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AuditDifferenceDto"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "operationTime": 1531995014607,
                  "operation": "POST",
                  "revision": 0,
                  "subjectId": "8ff875fd-b555-4a27-a75a-b7fcac836105",
                  "objectId": "2",
                  "objectType": "issue",
                  "diff": [
                    {
                      "op": "add",
                      "path": "/id",
                      "value": 2
                    },
                    {
                      "op": "add",
                      "path": "/userId",
                      "value": "8ff875fd-b555-4a27-a75a-b7fcac836105"
                    },
                    {
                      "op": "add",
                      "path": "/createDate",
                      "value": 1531995013224
                    },
                    {
                      "op": "add",
                      "path": "/text",
                      "value": null
                    },
                    {
                      "op": "add",
                      "path": "/type",
                      "value": {
                        "id": 1,
                        "name": "typeName",
                        "deleted": false,
                        "key": "e080ca1e-8b3b-11e8-b16c-408d5c969c0f"
                      }
                    },
                    {
                      "op": "add",
                      "path": "/typeId",
                      "value": 1
                    },
                    {
                      "op": "add",
                      "path": "/organizationId",
                      "value": "1"
                    },
                    {
                      "op": "add",
                      "path": "/priorityId",
                      "value": 1
                    },
                    {
                      "op": "add",
                      "path": "/externalId",
                      "value": "6f59117e-1822-4caf-9199-8352f6fc6d8a"
                    },
                    {
                      "op": "add",
                      "path": "/assignedOrganizationId",
                      "value": "1"
                    },
                    {
                      "op": "add",
                      "path": "/assignedUserId",
                      "value": "2e514b10-038e-46fc-8463-5a1b3ace4faf"
                    },
                    {
                      "op": "add",
                      "path": "/statusId",
                      "value": 1
                    },
                    {
                      "op": "add",
                      "path": "/updateDate",
                      "value": 1531995014152
                    },
                    {
                      "op": "add",
                      "path": "/customFields",
                      "value": {}
                    },
                    {
                      "op": "add",
                      "path": "/customers",
                      "value": [
                        {
                          "id": 1,
                          "name": "customerName",
                          "deleted": false
                        }
                      ]
                    },
                    {
                      "op": "add",
                      "path": "/assignedDateFrom",
                      "value": 1531995013224
                    },
                    {
                      "op": "add",
                      "path": "/assignedDateTo",
                      "value": 1532081413224
                    },
                    {
                      "op": "add",
                      "path": "/viewedBy",
                      "value": null
                    },
                    {
                      "op": "add",
                      "path": "/childIds",
                      "value": []
                    },
                    {
                      "op": "add",
                      "path": "/parentId",
                      "value": null
                    },
                    {
                      "op": "add",
                      "path": "/workflowId",
                      "value": 1
                    },
                    {
                      "op": "add",
                      "path": "/summary",
                      "value": null
                    },
                    {
                      "op": "add",
                      "path": "/comments",
                      "value": null
                    },
                    {
                      "op": "add",
                      "path": "/files",
                      "value": []
                    },
                    {
                      "op": "add",
                      "path": "/point",
                      "value": {
                        "geom": {
                          "type": "Point",
                          "coordinates": [
                            37.6286585128928,
                            55.74832841158241
                          ]
                        },
                        "address": "address",
                        "addressFields": {
                          "country": "country",
                          "region": "region",
                          "district": null,
                          "city": null,
                          "village": null,
                          "street": "street",
                          "house": "8",
                          "block": null,
                          "building": null,
                          "flat": null,
                          "entrance": null
                        }
                      }
                    },
                    {
                      "op": "add",
                      "path": "/customerNameString",
                      "value": "customerName"
                    },
                    {
                      "op": "add",
                      "path": "/deleted",
                      "value": false
                    }
                  ]
                }
              ]
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Получить список истории изменений",
        "security": [
          {
            "token": []
          }
        ],
        "tags": [
          "audit"
        ],
        "operationId": "get-audit-list",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "integer"
          }
        ]
      }
    },
    "/audit/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AuditDifferenceDto"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "operationTime": 1531995014607,
                "operation": "POST",
                "revision": 0,
                "subjectId": "8ff875fd-b555-4a27-a75a-b7fcac836105",
                "objectId": "2",
                "objectType": "issue",
                "diff": [
                  {
                    "op": "add",
                    "path": "/id",
                    "value": 2
                  },
                  {
                    "op": "add",
                    "path": "/userId",
                    "value": "8ff875fd-b555-4a27-a75a-b7fcac836105"
                  },
                  {
                    "op": "add",
                    "path": "/createDate",
                    "value": 1531995013224
                  },
                  {
                    "op": "add",
                    "path": "/text",
                    "value": null
                  },
                  {
                    "op": "add",
                    "path": "/type",
                    "value": {
                      "id": 1,
                      "name": "typeName",
                      "deleted": false,
                      "key": "e080ca1e-8b3b-11e8-b16c-408d5c969c0f"
                    }
                  },
                  {
                    "op": "add",
                    "path": "/typeId",
                    "value": 1
                  },
                  {
                    "op": "add",
                    "path": "/organizationId",
                    "value": "1"
                  },
                  {
                    "op": "add",
                    "path": "/priorityId",
                    "value": 1
                  },
                  {
                    "op": "add",
                    "path": "/externalId",
                    "value": "6f59117e-1822-4caf-9199-8352f6fc6d8a"
                  },
                  {
                    "op": "add",
                    "path": "/assignedOrganizationId",
                    "value": "1"
                  },
                  {
                    "op": "add",
                    "path": "/assignedUserId",
                    "value": "2e514b10-038e-46fc-8463-5a1b3ace4faf"
                  },
                  {
                    "op": "add",
                    "path": "/statusId",
                    "value": 1
                  },
                  {
                    "op": "add",
                    "path": "/updateDate",
                    "value": 1531995014152
                  },
                  {
                    "op": "add",
                    "path": "/customFields",
                    "value": {}
                  },
                  {
                    "op": "add",
                    "path": "/customers",
                    "value": [
                      {
                        "id": 1,
                        "name": "customerName",
                        "deleted": false
                      }
                    ]
                  },
                  {
                    "op": "add",
                    "path": "/assignedDateFrom",
                    "value": 1531995013224
                  },
                  {
                    "op": "add",
                    "path": "/assignedDateTo",
                    "value": 1532081413224
                  },
                  {
                    "op": "add",
                    "path": "/viewedBy",
                    "value": null
                  },
                  {
                    "op": "add",
                    "path": "/childIds",
                    "value": []
                  },
                  {
                    "op": "add",
                    "path": "/parentId",
                    "value": null
                  },
                  {
                    "op": "add",
                    "path": "/workflowId",
                    "value": 1
                  },
                  {
                    "op": "add",
                    "path": "/summary",
                    "value": null
                  },
                  {
                    "op": "add",
                    "path": "/comments",
                    "value": null
                  },
                  {
                    "op": "add",
                    "path": "/files",
                    "value": []
                  },
                  {
                    "op": "add",
                    "path": "/point",
                    "value": {
                      "geom": {
                        "type": "Point",
                        "coordinates": [
                          37.6286585128928,
                          55.74832841158241
                        ]
                      },
                      "address": "address",
                      "addressFields": {
                        "country": "country",
                        "region": "region",
                        "district": null,
                        "city": null,
                        "village": null,
                        "street": "street",
                        "house": "8",
                        "block": null,
                        "building": null,
                        "flat": null,
                        "entrance": null
                      }
                    }
                  },
                  {
                    "op": "add",
                    "path": "/customerNameString",
                    "value": "customerName"
                  },
                  {
                    "op": "add",
                    "path": "/deleted",
                    "value": false
                  }
                ]
              }
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Получить историю изменения по идентификатору",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "tags": [
          "audit"
        ],
        "operationId": "get-audit-by-id"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/audit/{objectType}/{objectId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AuditDifferenceDto"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "operationTime": 1531995014607,
                  "operation": "POST",
                  "revision": 0,
                  "subjectId": "8ff875fd-b555-4a27-a75a-b7fcac836105",
                  "objectId": "2",
                  "objectType": "issue",
                  "diff": [
                    {
                      "op": "add",
                      "path": "/id",
                      "value": 2
                    },
                    {
                      "op": "add",
                      "path": "/userId",
                      "value": "8ff875fd-b555-4a27-a75a-b7fcac836105"
                    },
                    {
                      "op": "add",
                      "path": "/createDate",
                      "value": 1531995013224
                    },
                    {
                      "op": "add",
                      "path": "/text",
                      "value": null
                    },
                    {
                      "op": "add",
                      "path": "/type",
                      "value": {
                        "id": 1,
                        "name": "typeName",
                        "deleted": false,
                        "key": "e080ca1e-8b3b-11e8-b16c-408d5c969c0f"
                      }
                    },
                    {
                      "op": "add",
                      "path": "/typeId",
                      "value": 1
                    },
                    {
                      "op": "add",
                      "path": "/organizationId",
                      "value": "1"
                    },
                    {
                      "op": "add",
                      "path": "/priorityId",
                      "value": 1
                    },
                    {
                      "op": "add",
                      "path": "/externalId",
                      "value": "6f59117e-1822-4caf-9199-8352f6fc6d8a"
                    },
                    {
                      "op": "add",
                      "path": "/assignedOrganizationId",
                      "value": "1"
                    },
                    {
                      "op": "add",
                      "path": "/assignedUserId",
                      "value": "2e514b10-038e-46fc-8463-5a1b3ace4faf"
                    },
                    {
                      "op": "add",
                      "path": "/statusId",
                      "value": 1
                    },
                    {
                      "op": "add",
                      "path": "/updateDate",
                      "value": 1531995014152
                    },
                    {
                      "op": "add",
                      "path": "/customFields",
                      "value": {}
                    },
                    {
                      "op": "add",
                      "path": "/customers",
                      "value": [
                        {
                          "id": 1,
                          "name": "customerName",
                          "deleted": false
                        }
                      ]
                    },
                    {
                      "op": "add",
                      "path": "/assignedDateFrom",
                      "value": 1531995013224
                    },
                    {
                      "op": "add",
                      "path": "/assignedDateTo",
                      "value": 1532081413224
                    },
                    {
                      "op": "add",
                      "path": "/viewedBy",
                      "value": null
                    },
                    {
                      "op": "add",
                      "path": "/childIds",
                      "value": []
                    },
                    {
                      "op": "add",
                      "path": "/parentId",
                      "value": null
                    },
                    {
                      "op": "add",
                      "path": "/workflowId",
                      "value": 1
                    },
                    {
                      "op": "add",
                      "path": "/summary",
                      "value": null
                    },
                    {
                      "op": "add",
                      "path": "/comments",
                      "value": null
                    },
                    {
                      "op": "add",
                      "path": "/files",
                      "value": []
                    },
                    {
                      "op": "add",
                      "path": "/point",
                      "value": {
                        "geom": {
                          "type": "Point",
                          "coordinates": [
                            37.6286585128928,
                            55.74832841158241
                          ]
                        },
                        "address": "address",
                        "addressFields": {
                          "country": "country",
                          "region": "region",
                          "district": null,
                          "city": null,
                          "village": null,
                          "street": "street",
                          "house": "8",
                          "block": null,
                          "building": null,
                          "flat": null,
                          "entrance": null
                        }
                      }
                    },
                    {
                      "op": "add",
                      "path": "/customerNameString",
                      "value": "customerName"
                    },
                    {
                      "op": "add",
                      "path": "/deleted",
                      "value": false
                    }
                  ]
                },
                {
                  "id": 2,
                  "operationTime": 1531995014831,
                  "operation": "PUT",
                  "revision": 1,
                  "subjectId": "8ff875fd-b555-4a27-a75a-b7fcac836105",
                  "objectId": "2",
                  "objectType": "issue",
                  "diff": [
                    {
                      "op": "replace",
                      "fromValue": null,
                      "path": "/text",
                      "value": "updated"
                    },
                    {
                      "op": "replace",
                      "fromValue": null,
                      "path": "/comments",
                      "value": []
                    }
                  ]
                },
                {
                  "id": 3,
                  "operationTime": 1531995014981,
                  "operation": "DELETE",
                  "revision": 2,
                  "subjectId": "8ff875fd-b555-4a27-a75a-b7fcac836105",
                  "objectId": "2",
                  "objectType": "issue",
                  "diff": []
                }
              ]
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Получить список историй изменений по типу объекта и идентификатору объекта",
        "tags": [
          "audit"
        ],
        "operationId": "get-audit-list-by-object-type-and-object-id",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "integer"
          }
        ]
      },
      "parameters": [
        {
          "name": "objectType",
          "in": "path",
          "type": "string",
          "required": true
        },
        {
          "name": "objectId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/{entityTypeCode}/customfields": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "entityTypeCode",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CustomFieldUpdate"
            }
          }
        ],
        "tags": [
          "CustomFields"
        ],
        "operationId": "create-cf-for-type"
      },
      "parameters": [
        {
          "name": "entityTypeCode",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/{entityTypeCode}/{entityId}/customfields": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        },
        "operationId": "create-cf-for-type-and-entity",
        "tags": [
          "CustomFields"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "entityTypeCode",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "entityId",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NewCustomField"
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "entityTypeCode",
          "in": "path",
          "type": "string",
          "required": true
        },
        {
          "name": "entityId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomField"
              }
            }
          }
        },
        "operationId": "get-custom-fields-by-entity-type-code-and-entity-id",
        "tags": [
          "CustomFields"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/{entityTypeCode}/{entityId}/customfields/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "CustomFields"
        ],
        "operationId": "delete-cf-for-type-and-entity",
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "entityTypeCode",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "entityId",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "format": "int64"
          }
        ]
      },
      "parameters": [
        {
          "name": "entityTypeCode",
          "in": "path",
          "type": "string",
          "required": true
        },
        {
          "name": "entityId",
          "in": "path",
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/metadata/issues/fields/system": {
      "get": {
        "summary": "List SystemField",
        "operationId": "findSystemFields",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/system-field-output"
              }
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ],
        "tags": [
          "metadataFields"
        ]
      }
    },
    "/metadata/issues/fields/effects": {
      "get": {
        "summary": "List FieldEffect",
        "operationId": "findFieldEffects",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/field-effect-output"
              }
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ],
        "tags": [
          "metadataFields"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Кол-во элементов в результате",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Смещение относительно начала выборки",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Фильтр",
            "type": "string"
          }
        ]
      },
      "post": {
        "summary": "Create FieldEffect",
        "operationId": "createFieldEffect",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/field-effect-input"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/field-effect-output-detailed"
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ],
        "tags": [
          "metadataFields"
        ]
      }
    },
    "/metadata/issues/fields/effects/{fieldEffectId}": {
      "parameters": [
        {
          "name": "fieldEffectId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "get": {
        "summary": "Get FieldEffect",
        "operationId": "getFieldEffect",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/field-effect-output-detailed"
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ],
        "tags": [
          "metadataFields"
        ]
      },
      "put": {
        "summary": "Update FieldEffect",
        "operationId": "updateFieldEffect",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/field-effect-input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/field-effect-output-detailed"
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ],
        "tags": [
          "metadataFields"
        ]
      },
      "delete": {
        "summary": "Delete FieldEffect",
        "operationId": "deleteFieldEffect",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "token": []
          }
        ],
        "tags": [
          "metadataFields"
        ]
      }
    },
    "/metadata/issues/widgets": {
      "get": {
        "summary": "List IssueWidget",
        "operationId": "findIssueWidgets",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/issue-widget-output"
              }
            }
          }
        },
        "tags": [
          "metadataWidgets"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Кол-во элементов в результате",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Смещение относительно начала выборки",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Фильтр",
            "type": "string"
          }
        ]
      },
      "post": {
        "summary": "Create IssueWidget",
        "operationId": "createIssueWidget",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/issue-widget-input"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/issue-widget-output-detailed"
            }
          }
        },
        "tags": [
          "metadataWidgets"
        ],
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/metadata/issues/widgets/{issueWidgetId}": {
      "parameters": [
        {
          "name": "issueWidgetId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "get": {
        "summary": "Get IssueWidget",
        "operationId": "getIssueWidget",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/issue-widget-output-detailed"
            }
          }
        },
        "tags": [
          "metadataWidgets"
        ],
        "security": [
          {
            "token": []
          }
        ]
      },
      "put": {
        "summary": "Update IssueWidget",
        "operationId": "updateIssueWidget",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/issue-widget-input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/issue-widget-output-detailed"
            }
          }
        },
        "tags": [
          "metadataWidgets"
        ],
        "security": [
          {
            "token": []
          }
        ]
      },
      "delete": {
        "summary": "Delete IssueWidget",
        "operationId": "deleteIssueWidget",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "metadataWidgets"
        ],
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/workflows/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          }
        },
        "operationId": "get-workflows-by-id",
        "security": [
          {
            "token": []
          }
        ],
        "tags": [
          "workflows"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Получить жц по идентификатору"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Обновить жц",
        "operationId": "update-workflow",
        "tags": [
          "workflows"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NewWorflow"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "type": "null"
            }
          }
        },
        "operationId": "delete-workflow-by-id",
        "tags": [
          "workflows"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "summary": "Удалить жц"
      }
    },
    "/approval/management/status-mapping": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Status-mapping-dto"
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Получить список связи статусов с процессом согласования",
        "operationId": "get-status-mapping-list",
        "tags": [
          "StatusMapping"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "description": "limit"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "offset"
          },
          {
            "in": "query",
            "name": "query",
            "type": "string",
            "description": "query"
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Status-mapping-dto"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "409": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Создать связь статуса с процессом согласования",
        "operationId": "create-status-mapping",
        "tags": [
          "StatusMapping"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Input-status-mapping-dto"
            }
          }
        ]
      }
    },
    "/approval/management/status-mapping/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Status-mapping-dto"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Получить связь статуса с процессом согласования по идентификатору",
        "operationId": "get-status-mapping-by-id",
        "tags": [
          "StatusMapping"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Status-mapping-dto"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "409": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Обновить связь статуса с процессом согласования",
        "operationId": "update-status-mapping-by-id",
        "tags": [
          "StatusMapping"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Input-status-mapping-dto"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "type": "null"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Удалить связь статуса с процессом согласования по идентификатору",
        "security": [
          {
            "token": []
          }
        ],
        "operationId": "delete-status-mapping-by-id",
        "tags": [
          "StatusMapping"
        ]
      }
    },
    "/issues/links/types": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Issue-link-type-dto"
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Получить список типов связки заявок",
        "tags": [
          "IssuesLinksTypes"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "query",
            "type": "string"
          }
        ],
        "operationId": "get-all-issue-link-types"
      }
    },
    "/issues/links/types/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Issue-link-type-dto"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Получить тип связки заявок по идентификатору",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "tags": [
          "IssuesLinksTypes"
        ],
        "operationId": "get-issue-link-type-by-id"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/issues/links": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Issue-link-dto"
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Получить список связки заявок",
        "tags": [
          "IssuesLinks"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "query",
            "type": "string"
          }
        ],
        "operationId": "get-all-issue-links"
      },
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Issue-link-dto"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "409": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Создать связку заявок",
        "tags": [
          "IssuesLinks"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Input-issue-link-dto"
            }
          }
        ],
        "operationId": "create-issue-link"
      }
    },
    "/issues/links/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Issue-link-dto"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Получить связку заявок по идентификатору",
        "tags": [
          "IssuesLinks"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "operationId": "get-issue-link-by-id"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Issue-link-dto"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "обновить связку заявок",
        "operationId": "update-issue-link-by-id",
        "tags": [
          "IssuesLinks"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Input-issue-link-dto"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Удалить связь заявок по идентификатору",
        "operationId": "delete-issues-link-by-id",
        "tags": [
          "IssuesLinks"
        ],
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/issues/links/batch": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Issue-link-dto"
              }
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "409": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Создание пачкой связки заявок",
        "tags": [
          "IssuesLinks"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Batch-input-issue-link-dto"
            }
          }
        ],
        "operationId": "batch-create-issue-links"
      }
    },
    "/issues/comments/groups/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CommentGroup"
            }
          }
        },
        "summary": "Получить список групп комментариев по идентификатору",
        "produces": [
          "application/json"
        ],
        "tags": [
          "comments"
        ],
        "security": [
          {
            "token": []
          }
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/workflows/statuses/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WorkflowStatus"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Получить по идентификатору",
        "operationId": "get-workflow-status-by-id",
        "tags": [
          "workflows"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WorkflowStatus"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Обновить статус",
        "operationId": "update-workflow-status",
        "tags": [
          "workflows"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NewWorkflowStatus"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "type": "null"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Удалить статус по идентификатору",
        "operationId": "delete-wokflow-status-by-id",
        "tags": [
          "workflows"
        ],
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/issues/statuses/actions": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Workflow"
              }
            }
          }
        },
        "summary": "Список переходов статусов",
        "operationId": "issues-statuses-actions",
        "tags": [
          "Workflows",
          "Жизненный цикл"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Кол-во элементов в результате",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Смещение относительно начала выборки",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Фильтр",
            "type": "string"
          }
        ]
      }
    },
    "/issues/accesses/{name}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessInfo"
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Возвращает список доступов для пользователя по указанному Capability",
        "operationId": "get-issues-accesses-by-name",
        "tags": [
          "Security",
          "Разграничение доступа"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ]
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/issues/controlled-fields": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestError"
            }
          }
        },
        "summary": "Возвращает список полей заявки, на которые распространяется контроль доступа.",
        "operationId": "get-issues-controlled-fields",
        "tags": [
          "Security",
          "Разграничение доступа"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/issues/defaults": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NewIssue"
            }
          }
        },
        "summary": "Подсчет значений по-умолчанию для формы создания заявки",
        "operationId": "issues-defaults",
        "tags": [
          "Issues",
          "Заявки"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NewIssue"
            }
          }
        ]
      }
    }
  },
  "responses": {
    "trait:restErrorTrait:400": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/RestError"
      }
    },
    "trait:restErrorTrait:401": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/RestError"
      }
    },
    "trait:restErrorTrait:403": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/RestError"
      }
    },
    "trait:restErrorTrait:500": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/RestError"
      }
    },
    "trait:созданиеПользовательскогоФильтра:200": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/UserFilter"
      }
    },
    "trait:commonErrors:400": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/RestError"
      }
    },
    "trait:commonErrors:401": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/RestError"
      }
    },
    "trait:commonErrors:403": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/RestError"
      }
    },
    "trait:commonErrors:500": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/RestError"
      }
    }
  },
  "definitions": {
    "DeletedId": {
      "title": "DeletedId",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор удаленного ресурса"
        }
      }
    },
    "FileType": {
      "title": "FileType",
      "type": "object",
      "description": "Тип файла.",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Идентификатор типа файла.",
          "format": "int64"
        },
        "type": {
          "type": "string",
          "description": "Наименование типа файла."
        }
      }
    },
    "Geometry": {
      "title": "Geometry",
      "type": "object",
      "properties": {
        "coordinates": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "type": {
          "type": "string"
        }
      }
    },
    "NewUserFilter": {
      "title": "Создание пользовательского фильтра",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "state": {
          "type": "object"
        }
      },
      "required": [
        "name",
        "state"
      ]
    },
    "RestError": {
      "title": "RestError",
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "description": "Код статуса"
        },
        "exception": {
          "type": "string",
          "description": "Локализованное сообщение об ошибке"
        },
        "body": {
          "type": [
            "object",
            "null"
          ],
          "description": "Дополнительная информация по ошибке"
        }
      },
      "required": [
        "status",
        "exception",
        "body"
      ]
    },
    "UserFilter": {
      "title": "Пользовательский фильтр",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "state": {
          "type": "object"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "name",
        "state"
      ]
    },
    "IssueFileInfo": {
      "title": "IssueFileInfo",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Идентификатор файла",
          "format": "int64"
        },
        "uuid": {
          "type": "string",
          "description": "Уникальный идентификатор файла"
        },
        "name": {
          "type": "string",
          "description": "Наименование файла"
        },
        "geom": {
          "$ref": "#/definitions/Geometry"
        },
        "description": {
          "type": "string",
          "description": "Описание файла",
          "default": ""
        },
        "order": {
          "type": "integer",
          "description": "Порядковый номер файла"
        },
        "issueId": {
          "type": "integer",
          "format": "int64"
        },
        "externalId": {
          "type": "string",
          "format": "uuid"
        }
      },
      "required": [
        "uuid",
        "issueId"
      ],
      "example": {
        "id": 379,
        "fileTypeId": 2,
        "order": 1,
        "name": "24c5157d-120d-4819-aa1c-2a2c9f5fa5ef",
        "extension": "PNG",
        "description": "Cats",
        "uuidOriginal": "b08990f4-bc9e-45b3-86ea-1c3eec5934f1",
        "uuidLarge": null,
        "uuidMedium": null,
        "uuidSmall": null,
        "geom": null,
        "uuid": "b08990f4-bc9e-45b3-86ea-1c3eec5934f1",
        "geometry": null,
        "customFields": {}
      }
    },
    "CommentCoordinates": {
      "title": "Coordinates",
      "type": "object",
      "properties": {
        "geom": {
          "$ref": "#/definitions/Geometry"
        },
        "address": {
          "type": "string",
          "description": "Адрес в текстовом формате."
        }
      }
    },
    "Comment": {
      "title": "Comment",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Идентификатор комментария.",
          "format": "int64"
        },
        "issueId": {
          "type": "integer",
          "description": "Идентификатор комментируемой задачи.",
          "format": "int64"
        },
        "comment": {
          "type": "string",
          "description": "Текст комментария."
        },
        "date": {
          "type": "integer",
          "description": "Дата создания комментария.",
          "format": "int64"
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IssueFileInfo"
          }
        },
        "coordinates": {
          "type": "array",
          "description": "Координаты, с которых был добавлен комментарий.",
          "items": {
            "$ref": "#/definitions/CommentCoordinates"
          }
        },
        "userInfo": {
          "$ref": "#/definitions/UserInfo"
        },
        "userId": {
          "type": "string",
          "description": "Идентификатор автора"
        },
        "groupCode": {
          "type": "string",
          "description": "Код группы комментария"
        },
        "externalId": {
          "type": "string",
          "format": "uuid"
        }
      },
      "required": [
        "id",
        "issueId",
        "comment",
        "date"
      ]
    },
    "UserInfo": {
      "title": "UserInfo",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Идентификатор пользователя."
        },
        "userGroupId": {
          "type": "integer",
          "description": "Идентификатор группы пользователя.",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "Имя пользователя."
        },
        "photo": {
          "type": [
            "object",
            "null"
          ],
          "description": "Фотографии пользователя."
        },
        "fullName": {
          "type": "string",
          "description": "ФИО"
        }
      },
      "required": [
        "id",
        "userGroupId",
        "name"
      ]
    },
    "NewComment": {
      "title": "NewComment",
      "type": "object",
      "example": {
        "issueId": 57493347,
        "comment": "dolore anim aliqua",
        "coordinates": [
          {},
          {},
          {}
        ],
        "files": [
          {
            "id": 66497991,
            "name": "ex"
          },
          {
            "id": 2561958,
            "name": "magna Excepteur et aliquip occaecat",
            "fileType": {
              "id": 35157532,
              "type": "Excepteur dolor"
            },
            "uuid": "mollit ipsum esse repr",
            "order": 93083586
          },
          {
            "id": 77495897,
            "name": "anim elit Lorem laborum velit",
            "uuid": "id in dolor amet",
            "geom": null
          },
          {
            "id": 34142393,
            "name": "do magna qui tempor occaecat"
          },
          {
            "id": 35717285,
            "name": "occaecat",
            "geom": {}
          }
        ],
        "photos": [
          {
            "id": 8928233,
            "name": "laborum ullamco venia",
            "geom": {}
          },
          {
            "id": -13002006,
            "name": "Lorem enim in"
          },
          {
            "id": -88291935,
            "name": "in Lor",
            "description": "Lorem si",
            "geom": {},
            "order": 20101110
          },
          {
            "id": -18318167,
            "name": "voluptate sed qui",
            "description": "cillum anim ex",
            "fileType": {
              "id": 27934508,
              "type": "reprehenderit culpa sint qui do"
            },
            "order": -26878677,
            "uuid": "dolor eu in enim"
          },
          {
            "id": -80121192,
            "name": "magna",
            "geom": {},
            "uuid": "Lore",
            "description": "magna deserunt sed laboris",
            "order": 47462949
          }
        ],
        "videos": [
          {
            "id": -63003608,
            "name": "velit ",
            "uuid": "eu cupidatat",
            "description": "in in Ut",
            "fileType": {
              "id": 58608645,
              "type": "labore aliqua"
            }
          }
        ],
        "sounds": [
          {
            "id": -86386680,
            "name": "Ut et reprehenderit",
            "fileType": {
              "id": -60771935,
              "type": "nisi"
            },
            "geom": null,
            "order": -3268763
          }
        ],
        "referenceId": -15043049,
        "uuid": null
      },
      "properties": {
        "issueId": {
          "type": "integer",
          "description": "Идентификатор задачи, к которой добавляется комментарий",
          "format": "int64"
        },
        "comment": {
          "type": "string",
          "description": "Текст комментария"
        },
        "coordinates": {
          "type": "array",
          "description": "Координаты, с которых добавляется комментарий.",
          "items": {
            "$ref": "#/definitions/CommentCoordinates"
          }
        },
        "files": {
          "type": "array",
          "description": "Файлы, прикладываемые к задаче вместе с комментарием.",
          "items": {
            "$ref": "#/definitions/IssueFileInfo"
          }
        },
        "referenceId": {
          "type": "integer",
          "description": "Ссылка на другой комментарий",
          "format": "int64"
        },
        "uuid": {
          "type": [
            "string",
            "null"
          ],
          "format": "uuid"
        },
        "groupCode": {
          "type": "string",
          "description": "Код группы комментария"
        },
        "externalId": {
          "type": "string",
          "format": "uuid",
          "description": "Внешний идентификатор комментария"
        }
      },
      "required": [
        "issueId",
        "comment"
      ]
    },
    "DeletedComment": {
      "title": "DeletedComment",
      "type": "object",
      "description": "",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Идентификатор удаленного комментария.",
          "format": "int64"
        }
      }
    },
    "IssueLink": {
      "title": "IssueLink",
      "type": "object",
      "properties": {
        "from": {
          "type": "integer",
          "format": "int64",
          "description": "Номер задачи источника (от)"
        },
        "to": {
          "type": "integer",
          "format": "int64",
          "description": "Номер задачи приемника (к)"
        },
        "type": {
          "type": "string",
          "description": "Тип связи"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64",
          "description": "Дата-время создания связи"
        },
        "typeDescription": {
          "type": "string",
          "description": "Описание связи"
        }
      },
      "required": [
        "from",
        "to",
        "type",
        "createdAt",
        "typeDescription"
      ]
    },
    "Transition": {
      "title": "Transition",
      "type": "object",
      "description": "Переход из статуса в следующий статус",
      "properties": {
        "from": {
          "type": "integer",
          "format": "int64",
          "description": "Изначальный статус"
        },
        "to": {
          "type": "integer",
          "format": "int64",
          "description": "Конечный статус"
        },
        "workflowId": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор ЖЦ"
        },
        "name": {
          "type": "string",
          "description": "Наименование перехода"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransitionField"
          }
        },
        "description": {
          "type": "string"
        },
        "active": {
          "type": "boolean",
          "default": true
        },
        "formActive": {
          "type": "boolean",
          "default": true
        },
        "code": {
          "type": "string",
          "description": "код"
        }
      },
      "required": [
        "from",
        "to",
        "workflowId",
        "name",
        "id",
        "code"
      ]
    },
    "TransitionInfo": {
      "title": "TransitionInfo",
      "type": "object",
      "properties": {
        "workflowId": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор ЖЦ"
        },
        "transitions": {
          "type": "array",
          "description": "Набор переходов",
          "items": {
            "$ref": "#/definitions/Transition"
          }
        },
        "availableStatusIds": {
          "type": "array",
          "description": "Набор доступных статусов в данном ЖЦ",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "statusesWithColor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowStatus"
          }
        }
      },
      "required": [
        "workflowId",
        "transitions",
        "availableStatusIds"
      ]
    },
    "Type": {
      "title": "Type",
      "type": "object",
      "description": "Тип заявки",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор"
        },
        "name": {
          "type": "string",
          "description": "Наименование"
        },
        "isDefault": {
          "type": "boolean",
          "description": "Тип по-умолчанию"
        },
        "workflowId": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор ЖЦ для этого типа заявки"
        },
        "code": {
          "type": "string",
          "description": "Ключ наименования тип в ресурсах"
        },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomField"
          }
        },
        "description": {
          "type": "string",
          "description": "Описание"
        },
        "parentId": {
          "type": "integer",
          "format": "int64",
          "description": "ИД родительского типа"
        },
        "deleted": {
          "type": "integer",
          "format": "int64",
          "description": "Удален"
        }
      },
      "required": [
        "id",
        "name",
        "isDefault",
        "workflowId",
        "code"
      ]
    },
    "TypeUpdate": {
      "title": "TypeUpdate",
      "type": "object",
      "description": "Модель для изменения типа заявки",
      "properties": {
        "name": {
          "type": "string",
          "description": "Наименование"
        },
        "isDefault": {
          "type": "boolean",
          "description": "Тип по-умолчанию",
          "default": false
        },
        "description": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "workflowId": {
          "type": "integer",
          "format": "int64",
          "description": "Идентфикатор жц"
        }
      },
      "required": [
        "name",
        "code"
      ]
    },
    "NewType": {
      "title": "NewType",
      "type": "object",
      "description": "Модель для создания типа заявки",
      "properties": {
        "name": {
          "type": "string",
          "description": "Наименование"
        },
        "description": {
          "type": "string",
          "description": "Описание"
        },
        "isDefault": {
          "type": "boolean",
          "description": "Тип по-умолчанию",
          "default": false
        },
        "organizationId": {
          "description": "Связь с организацией",
          "format": "int64",
          "type": "integer"
        },
        "code": {
          "type": "string"
        },
        "workflowId": {
          "type": "integer",
          "format": "int64",
          "description": "Идентфикатор жц"
        }
      },
      "required": [
        "name",
        "code"
      ]
    },
    "Report": {
      "title": "Report",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "parameters": {
          "type": "object"
        },
        "createDate": {
          "type": "integer",
          "format": "int64"
        },
        "templateUuid": {
          "type": "string"
        },
        "userId": {
          "type": "integer"
        }
      },
      "example": {
        "id": 21,
        "name": "Отчёт по заявкам на изменение технологического режима работы",
        "parameters": {
          "toLong": 1492012800000,
          "fromLong": 1492012800000
        },
        "createDate": 1494404600230,
        "templateUuid": "AhpTechModeIssuesReport",
        "userId": 97
      }
    },
    "WorkflowStatus": {
      "title": "WorkflowStatus",
      "type": "object",
      "properties": {
        "statusId": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор статуса"
        },
        "color": {
          "type": "string",
          "description": "Цвет статуса для данного воркфлоу"
        },
        "workflowId": {
          "type": "integer",
          "format": "int64"
        },
        "initial": {
          "type": "boolean",
          "default": false
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "active": {
          "type": "boolean",
          "default": true
        }
      },
      "required": [
        "statusId",
        "color"
      ]
    },
    "Credentials": {
      "title": "Credentials",
      "type": "object",
      "properties": {
        "login": {
          "type": "string",
          "description": "Логин"
        },
        "password": {
          "type": "string",
          "description": "Пароль"
        },
        "remember": {
          "type": "boolean",
          "default": false,
          "description": "Запомнить меня"
        }
      },
      "required": [
        "login",
        "password"
      ]
    },
    "AccessToken": {
      "title": "AccessToken",
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string",
          "description": "AccessToken"
        },
        "refresh_token": {
          "type": "string",
          "description": "RefreshToken"
        },
        "token_type": {
          "type": "string",
          "description": "Тип токена"
        },
        "expires_in": {
          "type": "integer",
          "format": "int64",
          "description": "Время жизни accessToken в секундах"
        }
      },
      "required": [
        "access_token",
        "refresh_token",
        "token_type",
        "expires_in"
      ]
    },
    "User": {
      "title": "User info",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "идентификатор пользователя"
        },
        "email": {
          "type": "string",
          "description": "email"
        },
        "firstName": {
          "type": "string",
          "description": "имя"
        },
        "photo": {
          "type": "string",
          "description": "фото"
        },
        "identifier": {
          "type": "string",
          "description": "идентификатор пользователя (копия id)"
        },
        "organizationId": {
          "type": "string",
          "description": "идентификатор организации"
        },
        "userGroupId": {
          "type": "integer",
          "format": "int64",
          "description": "идентификатор группы пользователей"
        },
        "ldapDn": {
          "type": "string",
          "description": "ldap dn"
        },
        "created": {
          "description": "дата создания",
          "format": "int64",
          "type": "integer"
        },
        "deleted": {
          "description": "дата удаления",
          "format": "int64",
          "type": "integer"
        },
        "activated": {
          "description": "пользователь активирован",
          "type": "boolean"
        },
        "blocked": {
          "description": "пользователь заблокирован",
          "type": "boolean"
        },
        "phone": {
          "type": "string",
          "description": "телефон"
        },
        "birthDate": {
          "type": "string",
          "description": "дата рождения"
        },
        "lastName": {
          "type": "string",
          "description": "Фамилия"
        },
        "patronymic": {
          "type": "string",
          "description": "Отчество"
        },
        "roleIds": {
          "type": "array",
          "description": "Список идентификаторов ролей",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "homeTimeZone": {
          "description": "Домашняя тайм зона",
          "type": "string"
        }
      }
    },
    "UserAppointment": {
      "title": "UserAppointment",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Код"
        },
        "name": {
          "type": "string",
          "description": "Наименование",
          "maxLength": 128
        },
        "additional": {
          "type": "string",
          "maxLength": 250,
          "description": "Дополнительная информация"
        }
      },
      "required": [
        "code",
        "name"
      ]
    },
    "UserPhoto": {
      "title": "UserPhoto",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор фото"
        },
        "name": {
          "type": "string",
          "description": "Название фото"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "Location": {
      "title": "Location",
      "type": "object",
      "properties": {
        "lon": {
          "type": "number",
          "description": "Долгота"
        },
        "lat": {
          "type": "number",
          "description": "Широта"
        },
        "date": {
          "type": "integer",
          "description": "Дата и время координат"
        }
      },
      "required": [
        "lon",
        "lat"
      ]
    },
    "UserGroup": {
      "title": "UserGroup",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор группы"
        },
        "uuid": {
          "type": "string",
          "description": "UUID для однозначного определения группы"
        },
        "email": {
          "type": "string",
          "description": "Электронная почта",
          "maxLength": 128
        },
        "businessEntity": {
          "type": "string",
          "description": "Организационно правовая форма"
        },
        "name": {
          "type": "string",
          "description": "Наименование"
        },
        "shortName": {
          "type": "string",
          "description": "Короткое наименование"
        },
        "fullName": {
          "type": "string",
          "description": "Полное наименование"
        },
        "address": {
          "type": "string",
          "description": "Адрес"
        },
        "juridicalAddress": {
          "type": "string",
          "description": "Юридический адрес"
        },
        "ownershipForm": {
          "type": "string",
          "description": "Форма собственности"
        },
        "mapExtent": {
          "$ref": "#/definitions/MapExtent"
        },
        "phones": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserGroupPhone"
          }
        },
        "organizationId": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор организации"
        },
        "defaultGroup": {
          "type": "boolean",
          "description": "Флаг группы по-умолчанию"
        },
        "parentGroupId": {
          "description": "Идентификатор родительской группы",
          "format": "int64",
          "type": "integer"
        },
        "customFields": {
          "type": "object",
          "description": "Дополнительные поля"
        },
        "defaultUser": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "id",
        "uuid",
        "defaultGroup"
      ]
    },
    "MapExtent": {
      "title": "MapExtent",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор"
        },
        "name": {
          "type": "string",
          "description": "Название экстента"
        },
        "geom": {
          "description": "Экстент в виде мультиполигона",
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "UserGroupPhone": {
      "title": "UserGroupPhone",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Телефон"
        }
      },
      "required": [
        "id",
        "phoneNumber"
      ]
    },
    "OrganizationInfo": {
      "title": "OrganizationInfo",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор"
        },
        "name": {
          "type": "string",
          "description": "Название организации"
        },
        "mapExtent": {
          "$ref": "#/definitions/MapExtent"
        }
      },
      "required": [
        "id"
      ]
    },
    "PushRule": {
      "title": "PushRule",
      "type": "object",
      "properties": {
        "issues": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ]
          }
        },
        "places": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ]
          }
        },
        "chat": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ]
          }
        }
      },
      "example": {
        "issues": [
          {
            "id": 1,
            "title": "обо всех"
          },
          {
            "id": 2,
            "title": "отслеживаю и участвую"
          },
          {
            "id": 3,
            "title": "на которые я назначен"
          },
          {
            "id": 4,
            "title": "которые я создал"
          }
        ],
        "places": [
          {
            "id": 1,
            "title": "уведомлять"
          },
          {
            "id": 2,
            "title": "не уведомлять"
          }
        ],
        "chat": [
          {
            "id": 1,
            "title": "уведомлять"
          },
          {
            "id": 2,
            "title": "не уведомлять"
          },
          {
            "id": 3,
            "title": "только направленные мне"
          }
        ]
      }
    },
    "UserEvent": {
      "title": "UserEvent",
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Дата события"
        },
        "placeId": {
          "type": "integer",
          "description": "Идентификатор места события"
        },
        "inside": {
          "type": "boolean",
          "description": "Является ли событие внутренним"
        }
      },
      "required": [
        "date",
        "placeId"
      ]
    },
    "UserTrack": {
      "title": "UserTrack",
      "type": "object",
      "properties": {
        "points": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarPoint"
          }
        },
        "distance": {
          "type": "integer"
        }
      }
    },
    "CarPoint": {
      "title": "CarPoint",
      "type": "object",
      "properties": {
        "data": {
          "type": "integer",
          "description": "Дата показаний"
        },
        "speed": {
          "type": "integer",
          "description": "Скорость"
        },
        "direction": {
          "type": "integer",
          "description": "Направление 0-360"
        },
        "odometr": {
          "type": "integer",
          "description": "Расстояние от предыдущей точки"
        },
        "lat": {
          "type": "integer",
          "description": "Широта метоположения"
        },
        "lng": {
          "type": "integer",
          "description": "Долгота местоположения"
        },
        "control": {
          "type": "boolean",
          "description": "Метка контрольной точки"
        },
        "address": {
          "type": "string",
          "description": "Адрес точки"
        },
        "distance": {
          "type": "integer",
          "description": "Дистанция между точками"
        }
      }
    },
    "Issue": {
      "title": "Issue",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "format": "int64",
          "description": "Идентификатор"
        },
        "userId": {
          "type": "string",
          "description": "Идентификатор пользователя"
        },
        "text": {
          "type": "string",
          "description": "Описание заявки"
        },
        "summary": {
          "type": "string",
          "description": "Тема заявки"
        },
        "type": {
          "$ref": "#/definitions/IssueTypeInfo"
        },
        "assignedUserId": {
          "type": "string"
        },
        "updateDate": {
          "type": "integer",
          "format": "int64"
        },
        "createDate": {
          "type": "integer",
          "format": "int64"
        },
        "customers": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "type": "string"
              },
              "deleted": {
                "type": "boolean"
              }
            }
          }
        },
        "assignedDateFrom": {
          "type": "integer",
          "format": "int64"
        },
        "assignedDateTo": {
          "type": "integer",
          "format": "int64"
        },
        "point": {
          "$ref": "#/definitions/Point"
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IssueFileInfo"
          }
        },
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Comment"
          }
        },
        "workflowId": {
          "type": "integer",
          "format": "int64"
        },
        "priorityId": {
          "type": "integer",
          "format": "int64"
        },
        "typeId": {
          "type": "integer",
          "format": "int64"
        },
        "assignedOrganizationId": {
          "type": "string"
        },
        "statusId": {
          "type": "integer",
          "format": "int64"
        },
        "childIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Issue"
          }
        },
        "customerNameString": {
          "type": "string"
        },
        "organizationId": {
          "type": "string"
        },
        "customFields": {
          "$ref": "#/definitions/ObjectNode"
        },
        "externalId": {
          "type": "string",
          "format": "uuid"
        },
        "archived": {
          "type": "boolean",
          "description": "Отправлено в архив"
        },
        "viewedBy": {
          "type": "array",
          "description": "Список ролей пользователей, просмотревших задачу",
          "items": {
            "type": "string"
          }
        },
        "parentId": {
          "type": "integer",
          "format": "int64",
          "description": "Родительская задача"
        },
        "issueLinksTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Issue-link-dto"
          }
        },
        "issueLinksFrom": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Issue-link-dto"
          }
        }
      }
    },
    "NewIssue": {
      "title": "NewIssue",
      "type": "object",
      "properties": {
        "typeId": {
          "type": "integer",
          "description": "Тип заявки",
          "format": "int64"
        },
        "assignedUserId": {
          "type": "string",
          "description": "Исполнитель"
        },
        "point": {
          "$ref": "#/definitions/Point"
        },
        "assignedDateFrom": {
          "type": "integer",
          "format": "int64",
          "description": "Дата и время, когда нужно начать выполнение задачи"
        },
        "assignedDateTo": {
          "type": "integer",
          "format": "int64",
          "description": "Срок исполнения"
        },
        "createDate": {
          "type": "integer",
          "format": "int64",
          "description": "Дата создания заявки"
        },
        "summary": {
          "type": "string",
          "description": "Тема заявки"
        },
        "text": {
          "type": "string",
          "description": "Описание задачи"
        },
        "priorityId": {
          "type": "integer",
          "description": "Приоритет",
          "format": "int64"
        },
        "customFields": {
          "$ref": "#/definitions/ObjectNode"
        },
        "parentId": {
          "type": "integer",
          "description": "Родительская задача",
          "format": "int64"
        },
        "customerIds": {
          "type": "array",
          "description": "Список заказчиков",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "statusId": {
          "type": "integer",
          "description": "Статус",
          "format": "int64"
        },
        "files": {
          "type": "array",
          "description": "Другие файлы",
          "items": {
            "$ref": "#/definitions/NewIssueFile"
          }
        },
        "newCustomers": {
          "type": "array",
          "description": "Список заказчиков для создания",
          "items": {
            "$ref": "#/definitions/NewCustomer"
          }
        },
        "externalId": {
          "type": "string",
          "format": "uuid",
          "description": "Внешний идентификатор заявки"
        }
      },
      "required": [
        "typeId",
        "summary",
        "priorityId"
      ]
    },
    "Point": {
      "title": "Point",
      "type": "object",
      "properties": {
        "geom": {
          "$ref": "#/definitions/Geometry"
        },
        "address": {
          "type": "string"
        },
        "addressFields": {
          "$ref": "#/definitions/PointAddressFields"
        }
      },
      "example": {
        "geom": {},
        "address": "cupidatat dolore ipsum eu laboris"
      }
    },
    "IssueFile": {
      "title": "IssueFile",
      "type": "object",
      "example": {
        "id": 24,
        "fileType": {
          "id": 4,
          "type": "sounds"
        },
        "order": 1,
        "name": "e36337d5-0cf2-4605-a950-afd410fa31b2",
        "extension": "avi",
        "description": "Cats",
        "uuidOriginal": "b013e4fa-a0fe-4a9d-8e64-57110fba18e5",
        "uuid": "b013e4fa-a0fe-4a9d-8e64-57110fba18e5",
        "updateDate": 1497530495620,
        "customFields": {}
      },
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор"
        },
        "issueId": {
          "type": "integer",
          "format": "int64"
        },
        "order": {
          "type": "integer",
          "description": "Порядковый номер (для отображения)",
          "minimum": 1,
          "maximum": 32767
        },
        "description": {
          "type": "string",
          "description": "Описание файла"
        },
        "uuid": {
          "type": "string",
          "description": "Код изображения в хранилище"
        },
        "updateDate": {
          "type": "integer",
          "format": "int64",
          "description": "Дата в время обновления"
        },
        "customFields": {
          "type": "object",
          "description": "Доп. поля"
        },
        "externalId": {
          "type": "string",
          "format": "uuid"
        }
      },
      "required": [
        "id",
        "issueId",
        "order",
        "description"
      ]
    },
    "Address": {
      "title": "Address",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Идентификатор",
          "format": "int64"
        },
        "geom": {
          "$ref": "#/definitions/Geometry"
        },
        "address": {
          "type": "string",
          "description": "Текстовое представление"
        }
      },
      "required": [
        "id",
        "geom"
      ],
      "example": {
        "id": -60776518,
        "geom": {},
        "address": "laborum in id"
      }
    },
    "NamedEntity": {
      "title": "NamedEntity",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Идентификатор"
        },
        "name": {
          "type": "string",
          "description": "Имя сущности"
        },
        "deleted": {
          "type": "boolean",
          "description": "Признак удаления сущности"
        }
      },
      "example": {
        "id": 1,
        "name": "Админ",
        "deleted": false
      }
    },
    "IssueUpdate": {
      "title": "IssueUpdate",
      "type": "object",
      "properties": {
        "typeId": {
          "type": "integer",
          "description": "Тип заявки",
          "format": "int64"
        },
        "assignedUserId": {
          "type": "string",
          "description": "Исполнитель"
        },
        "point": {
          "$ref": "#/definitions/Point"
        },
        "assignedDateFrom": {
          "type": "integer",
          "format": "int64",
          "description": "Дата и время, когда нужно начать выполнение задачи"
        },
        "assignedDateTo": {
          "type": "integer",
          "format": "int64",
          "description": "Срок исполнения"
        },
        "createDate": {
          "type": "integer",
          "format": "int64",
          "description": "Дата создания заявки"
        },
        "summary": {
          "type": "string",
          "description": "Тема заявки"
        },
        "text": {
          "type": "string",
          "description": "Описание задачи"
        },
        "priorityId": {
          "type": "integer",
          "description": "Приоритет",
          "format": "int64"
        },
        "customFields": {
          "$ref": "#/definitions/ObjectNode"
        },
        "parentId": {
          "type": "integer",
          "description": "Родительская задача",
          "format": "int64"
        },
        "customerIds": {
          "type": "array",
          "description": "Список заказчиков",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "statusId": {
          "type": "integer",
          "description": "Статус",
          "format": "int64"
        },
        "files": {
          "type": "array",
          "description": "Другие файлы",
          "items": {
            "$ref": "#/definitions/NewIssueFile"
          }
        },
        "newCustomers": {
          "type": "array",
          "description": "Список заказчиков для создания",
          "items": {
            "$ref": "#/definitions/NewCustomer"
          }
        },
        "externalId": {
          "type": "string",
          "format": "uuid",
          "description": "Внешний идентификатор заявки"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор"
        },
        "updateDate": {
          "type": "integer",
          "description": "Время обновления",
          "format": "int64"
        }
      },
      "required": [
        "typeId",
        "summary",
        "priorityId",
        "id",
        "updateDate"
      ]
    },
    "Customer": {
      "title": "Customer",
      "type": "object",
      "example": {
        "id": -79480404,
        "name": "Lorem sint quis officia",
        "phone": "consequat sit",
        "email": "est esse ea",
        "comment": null,
        "addresses": [
          {
            "geom": {
              "coordinates": [
                47808413,
                95844466,
                8873935
              ],
              "type": "non proident anim"
            }
          },
          {
            "id": -2260435,
            "address": "quis cillum"
          }
        ],
        "isSystem": true,
        "issuesCount": 27526960,
        "organizationId": 29393513
      },
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "geom": {
                "type": "object",
                "properties": {
                  "coordinates": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "type": {
                    "type": "string"
                  }
                }
              },
              "address": {
                "type": "string"
              }
            }
          }
        },
        "isSystem": {
          "type": "boolean"
        },
        "issuesCount": {
          "type": "integer"
        },
        "organizationId": {
          "type": "string"
        }
      }
    },
    "Place": {
      "title": "Place",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Идентификатор",
          "format": "int64"
        },
        "geom": {
          "$ref": "#/definitions/Geometry"
        },
        "address": {
          "type": "string",
          "description": "Текстовое представление"
        },
        "radius": {
          "type": "integer"
        }
      },
      "required": [
        "id",
        "geom"
      ],
      "example": {
        "id": -60776518,
        "geom": {},
        "address": "laborum in id"
      }
    },
    "PlaceForm": {
      "title": "PlaceForm",
      "type": "object",
      "properties": {
        "geom": {
          "$ref": "#/definitions/Geometry"
        },
        "address": {
          "type": "string",
          "description": "Текстовое представление"
        },
        "radius": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "geom"
      ],
      "example": {
        "id": -60776518,
        "geom": {},
        "address": "laborum in id"
      }
    },
    "GeoEvent": {
      "title": "Событие геозоны",
      "type": "object",
      "properties": {
        "carId": {
          "type": "integer",
          "description": "Идентификатор ТС ",
          "format": "int64"
        },
        "userId": {
          "type": "integer",
          "description": "Идентификатор пользователя",
          "format": "int64"
        },
        "date": {
          "type": "integer",
          "description": "Дата события",
          "format": "int64"
        },
        "getInside": {
          "type": "boolean",
          "description": "Внутри ли геозоны"
        }
      }
    },
    "CustomFieldMetadata": {
      "title": "CustomFieldMetadata",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор"
        },
        "format": {
          "type": "string",
          "description": "Формат поля"
        },
        "name": {
          "type": "string",
          "description": "наименование поля"
        },
        "fieldCode": {
          "type": "string",
          "description": "Код поля"
        },
        "uniquenessGroup": {
          "type": "string",
          "description": "Группа уникальности технического наименования поля"
        },
        "ownerCode": {
          "type": "string",
          "description": "Наименование сущности-владельца поля"
        },
        "groupName": {
          "type": "string",
          "description": "Наименование группы полей"
        },
        "defaultValue": {
          "type": "string",
          "description": "Строковое представление значения по умолчанию"
        },
        "isVisible": {
          "description": "Признак видимости поля",
          "type": "boolean"
        },
        "order": {
          "format": "int64",
          "description": "Порядковый номер поля для сортировки",
          "type": "integer"
        },
        "regexp": {
          "type": "string",
          "description": "Регулярное выражение для валидации"
        },
        "minLength": {
          "type": "integer",
          "description": "Минимальная длина поля"
        },
        "maxLength": {
          "type": "integer",
          "description": "Максимальная длина поля"
        },
        "isRequired": {
          "type": "boolean",
          "description": "Обязательность поля"
        },
        "referencePath": {
          "type": "string",
          "description": "Путь до референс"
        },
        "referenceIdFieldName": {
          "type": "string",
          "description": "Названия поля, которое является идентификатором (например: code)"
        },
        "dictionary": {
          "type": "string",
          "description": "Наименование словаря"
        }
      },
      "required": [
        "id",
        "format",
        "name",
        "fieldCode",
        "uniquenessGroup",
        "ownerCode",
        "groupName",
        "regexp",
        "minLength",
        "maxLength",
        "isRequired"
      ]
    },
    "NewCustomer": {
      "title": "NewCustomer",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "geom": {
                "type": "object"
              },
              "address": {
                "type": "string"
              }
            }
          }
        }
      },
      "required": [
        "name",
        "phone"
      ]
    },
    "NewCustomField": {
      "title": "NewCustomField",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "order": {
          "type": "integer",
          "format": "int64"
        },
        "uniquenessGroup": {
          "type": "string"
        },
        "validation": {
          "type": "null"
        },
        "validationErrorText": {
          "type": "null"
        },
        "link": {
          "type": "null"
        },
        "method": {
          "type": "string"
        },
        "valueField": {
          "type": "null"
        },
        "textField": {
          "type": "null"
        },
        "default_value": {
          "type": "string"
        },
        "ownerCode": {
          "type": "string"
        },
        "params": {
          "type": "object"
        }
      },
      "required": [
        "type",
        "title",
        "code",
        "required",
        "order"
      ]
    },
    "CustomFieldUpdate": {
      "title": "CustomFieldUpdate",
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Человекочитаемое наименование поле"
        },
        "defaultValue": {
          "type": "string",
          "description": "Строковое представление значения по умолчанию"
        },
        "order": {
          "type": "integer",
          "description": "Устанавливает порядковый номер поля",
          "format": "int64"
        },
        "code": {
          "type": "string",
          "description": "Код"
        },
        "validation": {
          "type": "string",
          "description": "Правило валидации"
        },
        "validationErrorText": {
          "type": "string",
          "description": "Текст сообщения в случае непрохождения валидации"
        },
        "required": {
          "type": "boolean",
          "description": "Обязательность"
        },
        "uniquenessGroup": {
          "type": "string",
          "description": "Группа уникальности"
        },
        "ownerCode": {
          "type": "string",
          "description": "Код владельца"
        },
        "type": {
          "type": "string",
          "description": "Тип"
        }
      },
      "required": [
        "title",
        "code"
      ]
    },
    "CustomFieldFormat": {
      "title": "CustomFieldFormat",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Код формата"
        },
        "value": {
          "type": "string",
          "description": "Значение формата"
        }
      }
    },
    "CustomFieldInfo": {
      "title": "CustomFieldInfo",
      "type": "object",
      "properties": {
        "customFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldMetadata"
          }
        },
        "fieldsTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldFormat"
          }
        }
      }
    },
    "VersionInfo": {
      "title": "VersionInfo",
      "type": "object",
      "properties": {
        "project.artifactId": {
          "type": "string",
          "description": "Имя сервиса"
        },
        "project.version": {
          "type": "string",
          "description": "Версия"
        },
        "build.time": {
          "type": "string",
          "description": "Время сборки"
        },
        "git.revision": {
          "type": "string",
          "description": "Ревизия SCM"
        }
      },
      "required": [
        "project.artifactId",
        "project.version",
        "build.time",
        "git.revision"
      ]
    },
    "Organization": {
      "title": "Organization",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор"
        },
        "name": {
          "type": "string",
          "description": "Наименование",
          "minLength": 0,
          "maxLength": 255
        },
        "fullName": {
          "type": "string",
          "description": "Полное наименование",
          "minLength": 0,
          "maxLength": 255
        },
        "ownershipForm": {
          "type": "string",
          "description": "Форма собственности",
          "minLength": 0,
          "maxLength": 128
        },
        "businessEntity": {
          "type": "string",
          "description": "Организационно-правовая форма ",
          "minLength": 0,
          "maxLength": 255
        },
        "blocked": {
          "type": "boolean",
          "description": "Признак блокировки"
        },
        "issuesMaxCount": {
          "type": "integer",
          "format": "int64"
        },
        "usersMaxCount": {
          "type": "integer",
          "format": "int64"
        },
        "smsMaxCount": {
          "type": "integer",
          "format": "int64"
        },
        "placesMaxCount": {
          "type": "integer",
          "format": "int64"
        },
        "customersMaxCount": {
          "type": "integer",
          "format": "int64"
        },
        "partialBlocked": {
          "type": "boolean",
          "description": "Флаг частичной блокировки организации"
        },
        "customFields": {
          "type": "object",
          "description": "Доп. поля"
        },
        "phones": {
          "type": "array",
          "description": "Перечень телефонов",
          "items": {
            "$ref": "#/definitions/OrganizationPhone"
          }
        },
        "subordinateOrgIds": {
          "type": "array",
          "description": "Список идентификаторов подчиненных организаций",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "required": [
        "id",
        "name",
        "issuesMaxCount",
        "usersMaxCount",
        "smsMaxCount",
        "placesMaxCount",
        "customersMaxCount",
        "partialBlocked"
      ]
    },
    "OrganizationPhone": {
      "title": "OrganizationPhone",
      "type": "object",
      "properties": {
        "id": {
          "type": [
            "string",
            "integer"
          ]
        },
        "phoneTypeKey": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        }
      }
    },
    "Status": {
      "title": "Status",
      "type": "object",
      "example": {
        "id": -44872596,
        "code": "sint pariatur",
        "name": "ut",
        "visible": true,
        "isClosed": true,
        "isCommon": false,
        "namePlural": "minim dolor amet exercitation sed",
        "color": "ad consequat pariatur enim esse",
        "isInitial": true,
        "default": true,
        "key": "do eu pariatur reprehenderit quis"
      },
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор"
        },
        "name": {
          "type": "string",
          "description": "Наименование"
        },
        "namePlural": {
          "type": "string",
          "description": "Наименование во мн. числе"
        },
        "color": {
          "type": "string",
          "description": "Цвет"
        },
        "isDefault": {
          "type": "boolean",
          "description": "Признак статуса по-умолчанию"
        },
        "code": {
          "type": "string",
          "description": "Ключ i18n"
        },
        "organizationId": {
          "type": "integer",
          "format": "int64"
        },
        "active": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "name",
        "namePlural",
        "color",
        "isDefault",
        "active"
      ]
    },
    "Priority": {
      "title": "Priority",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор"
        },
        "name": {
          "type": "string",
          "description": "Наименование"
        },
        "order": {
          "type": "integer",
          "description": "Порядок следования в списке (для отображения)"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "NewPriority": {
      "title": "NewPriority",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Наименование"
        },
        "order": {
          "type": "integer",
          "description": "Порядок"
        }
      },
      "required": [
        "name"
      ]
    },
    "DictionaryValue": {
      "title": "DictionaryValue",
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Ключ"
        },
        "value": {
          "type": "string",
          "description": "Значение"
        }
      },
      "required": [
        "key",
        "value"
      ]
    },
    "AccessInfo": {
      "title": "AccessInfo",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор"
        },
        "role": {
          "type": "string"
        },
        "states": {
          "type": "array",
          "description": "Список идентификаторов состояний",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "fields": {
          "type": "array",
          "description": "Список наименований полей",
          "items": {
            "type": "string"
          }
        },
        "permissionCode": {
          "type": "string",
          "description": "Маска операции доступа"
        },
        "entityId": {
          "type": "string",
          "description": "Тип объекта"
        },
        "code": {
          "type": "string",
          "description": "Уникальный код доступа"
        },
        "description": {
          "type": "string",
          "description": "Опсиание доступа"
        }
      },
      "required": [
        "id",
        "role",
        "states",
        "fields"
      ]
    },
    "State": {
      "title": "State",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор"
        },
        "name": {
          "type": "string",
          "description": "Наименование состояния"
        },
        "sign": {
          "type": "string",
          "description": "Оператор"
        },
        "code": {
          "type": "string",
          "description": "Код"
        },
        "leftOperand": {
          "$ref": "#/definitions/ObjectNode"
        },
        "rightOperand": {
          "$ref": "#/definitions/ObjectNode"
        },
        "entityId": {
          "type": "string",
          "description": "Идентификатор сущности"
        }
      },
      "required": [
        "id",
        "name",
        "sign"
      ]
    },
    "ChangeInfo": {
      "title": "ChangeInfo",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор"
        },
        "entityName": {
          "type": "string",
          "description": "Наименование сущности"
        },
        "entityId": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор сущности"
        },
        "date": {
          "type": "integer",
          "format": "int64",
          "description": "Дата и время изменения"
        },
        "changes": {
          "type": [
            "array"
          ],
          "description": "Список изменений",
          "items": {
            "$ref": "#/definitions/FieldChange"
          }
        },
        "action": {
          "type": "string",
          "enum": [
            "create",
            "update",
            "delete",
            "comment",
            "mark_delete"
          ],
          "description": "Тип действия"
        },
        "userId": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор пользователя, выполневшего действие"
        },
        "userInfo": {
          "$ref": "#/definitions/UserInfo"
        }
      },
      "required": [
        "id",
        "entityName",
        "entityId",
        "date",
        "action",
        "userId"
      ]
    },
    "FieldChange": {
      "title": "FieldChange",
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string",
          "description": "Наименование поля"
        },
        "oldValue": {
          "type": "object",
          "description": "Старое значение"
        },
        "newValue": {
          "type": "object",
          "description": "Новое значение"
        }
      },
      "required": [
        "fieldName"
      ]
    },
    "NewIssueFile": {
      "title": "NewIssueFile",
      "type": "object",
      "example": {
        "id": 379,
        "fileTypeId": 2,
        "order": 1,
        "name": "24c5157d-120d-4819-aa1c-2a2c9f5fa5ef",
        "extension": "PNG",
        "description": "Cats",
        "uuidOriginal": "b08990f4-bc9e-45b3-86ea-1c3eec5934f1",
        "uuidLarge": null,
        "uuidMedium": null,
        "uuidSmall": null,
        "geom": null,
        "uuid": "b08990f4-bc9e-45b3-86ea-1c3eec5934f1",
        "geometry": null,
        "customFields": {}
      },
      "properties": {
        "uuid": {
          "type": "string",
          "description": "Уникальный идентификатор файла"
        },
        "geom": {
          "$ref": "#/definitions/Geometry"
        },
        "description": {
          "type": "string",
          "description": "Описание файла",
          "default": ""
        },
        "order": {
          "type": "integer",
          "description": "Порядковый номер файла"
        },
        "customFields": {
          "type": "object",
          "description": "Дополнительные поля"
        },
        "externalId": {
          "type": "string",
          "format": "uuid",
          "description": "Внешний идентификатор файла"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор"
        }
      },
      "required": [
        "uuid",
        "description"
      ]
    },
    "IssuePatch": {
      "title": "IssuePatch",
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Описание задачи"
        },
        "priorityId": {
          "type": "integer",
          "description": "Приоритет",
          "format": "int64"
        },
        "customFields": {
          "type": "object",
          "description": "Кастом поля"
        },
        "parentId": {
          "type": "integer",
          "description": "Родительская задача",
          "format": "int64"
        },
        "customerIds": {
          "type": "array",
          "description": "Список заказчиков",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "statusId": {
          "type": "integer",
          "description": "Статус",
          "format": "int64"
        },
        "summary": {
          "type": "string",
          "description": "Тема заявки"
        },
        "files": {
          "type": "array",
          "description": "Другие файлы",
          "items": {
            "$ref": "#/definitions/NewIssueFile"
          }
        },
        "newCustomers": {
          "type": "array",
          "description": "Список заказчиков для создания",
          "items": {
            "$ref": "#/definitions/NewCustomer"
          }
        },
        "assignedUserId": {
          "type": "string",
          "description": "Исполнитель"
        },
        "assignedDateFrom": {
          "type": "integer",
          "format": "int64",
          "description": "Дата и время, когда нужно начать выполнение задачи"
        },
        "assignedDateTo": {
          "type": "integer",
          "format": "int64",
          "description": "Срок исполнения"
        },
        "point": {
          "$ref": "#/definitions/Point"
        },
        "typeId": {
          "type": "integer",
          "description": "Тип заявки",
          "format": "int64"
        },
        "updateDate": {
          "type": "integer",
          "format": "int64",
          "description": "Дата обновления заявки"
        },
        "archived": {
          "type": "boolean",
          "description": "Отправлено в архив"
        }
      },
      "required": [
        "updateDate"
      ]
    },
    "IssueLockAction": {
      "title": "IssueLockAction",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Тип блокировки",
          "enum": [
            "DELETE",
            "UPDATE"
          ]
        },
        "reason": {
          "type": "string",
          "description": "Причина блокировки"
        }
      },
      "required": [
        "type",
        "reason"
      ]
    },
    "IssueLock": {
      "title": "IssueLock",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "ИД блокировки"
        },
        "lockTime": {
          "type": "integer",
          "format": "int64",
          "description": "Дата блокировки"
        },
        "type": {
          "type": "string",
          "description": "Тип блокировки",
          "enum": [
            "DELETE",
            "UPDATE"
          ]
        },
        "user": {
          "$ref": "#/definitions/UserInfo"
        },
        "issueId": {
          "type": "integer",
          "format": "int64",
          "description": "ИД Заявки"
        },
        "reason": {
          "type": "string",
          "description": "Причина блокировки"
        },
        "unlock": {
          "$ref": "#/definitions/IssueUnlock"
        }
      },
      "required": [
        "id",
        "lockTime",
        "type",
        "user",
        "issueId",
        "reason"
      ]
    },
    "IssueUnlock": {
      "title": "IssueUnlock",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "ИД блокировки (разблокировки)"
        },
        "unlockTime": {
          "type": "integer",
          "format": "int64",
          "description": "Дата и время разблокировки"
        },
        "user": {
          "$ref": "#/definitions/UserInfo"
        }
      },
      "required": [
        "id",
        "unlockTime",
        "user"
      ]
    },
    "IssueUnlockAction": {
      "title": "IssueUnlockAction",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Тип блокировки",
          "enum": [
            "DELETE",
            "UPDATE"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "PointAddressFields": {
      "title": "PointAddressFields",
      "type": "object",
      "example": {
        "geom": {},
        "address": "cupidatat dolore ipsum eu laboris"
      },
      "properties": {
        "country": {
          "type": "string",
          "description": "Страна"
        },
        "region": {
          "type": "string",
          "description": "Регион"
        },
        "district": {
          "type": "string",
          "description": "Район"
        },
        "city": {
          "type": "string",
          "description": "Город"
        },
        "village": {
          "type": "string",
          "description": "Деревня"
        },
        "street": {
          "type": "string",
          "description": "Улица"
        },
        "house": {
          "type": "string",
          "description": "Дом"
        },
        "block": {
          "type": "string",
          "description": "Корпус"
        },
        "building": {
          "type": "string",
          "description": "Строение"
        },
        "flat": {
          "type": "string",
          "description": "Квартира/Офис"
        },
        "entrance": {
          "type": "string",
          "description": "Подъезд"
        }
      }
    },
    "CommentGroup": {
      "type": "object",
      "title": "Группа комментариев",
      "properties": {
        "id": {
          "type": "integer",
          "description": "идентификатор",
          "format": "int64"
        },
        "code": {
          "type": "string",
          "description": "код"
        },
        "name": {
          "type": "string",
          "description": "имя"
        }
      },
      "required": [
        "id",
        "code",
        "name"
      ]
    },
    "ObjectAccesses": {
      "type": "object",
      "properties": {
        "fieldCapabilities": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "capabilityName": {
                "type": "string"
              },
              "fields": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "objectCapabilities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Доступ к объекту"
    },
    "GlobalAccesses": {
      "type": "object",
      "properties": {
        "objectCapabilities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Глобальный доступ"
    },
    "NewIssueStatus": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namePlural": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "organizationId": {
          "type": "integer"
        },
        "isDefault": {
          "type": "boolean",
          "default": false
        },
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "active": {
          "type": "boolean",
          "default": true
        }
      },
      "required": [
        "name",
        "color",
        "code"
      ]
    },
    "NewTransition": {
      "title": "NewTransition",
      "type": "object",
      "description": "Переход из статуса в следующий статус",
      "properties": {
        "from": {
          "type": "integer",
          "format": "int64",
          "description": "Изначальный статус"
        },
        "to": {
          "type": "integer",
          "format": "int64",
          "description": "Конечный статус"
        },
        "workflowId": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор ЖЦ"
        },
        "name": {
          "type": "string",
          "description": "Наименование перехода"
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransitionField"
          }
        },
        "description": {
          "type": "string"
        },
        "active": {
          "type": "boolean",
          "default": true
        },
        "formActive": {
          "type": "boolean",
          "default": true
        }
      },
      "required": [
        "from",
        "to",
        "workflowId",
        "name"
      ]
    },
    "NewWorkflowStatus": {
      "title": "NewWorkflowStatus",
      "type": "object",
      "properties": {
        "statusId": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор статуса"
        },
        "color": {
          "type": "string",
          "description": "Цвет статуса для данного воркфлоу"
        },
        "workflowId": {
          "type": "integer",
          "format": "int64"
        },
        "initial": {
          "type": "boolean"
        },
        "active": {
          "type": "boolean",
          "default": true
        }
      },
      "required": [
        "statusId",
        "workflowId"
      ]
    },
    "Workflow": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "issueCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type"
          }
        },
        "transitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transition"
          }
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowStatus"
          }
        },
        "default": {
          "type": "boolean"
        },
        "organizationId": {
          "type": "string"
        }
      }
    },
    "TransitionField": {
      "type": "object",
      "title": "TransitionField",
      "properties": {
        "code": {
          "type": "string"
        },
        "required": {
          "type": "boolean",
          "default": false
        }
      },
      "required": [
        "code"
      ]
    },
    "ScriptingPoint": {
      "type": "object",
      "title": "Точка расширения с помощью скрипта",
      "properties": {
        "uniqueCode": {
          "type": "string",
          "description": "Уникальный код точки выполнения скрипта."
        },
        "description": {
          "type": "string",
          "description": "Описание"
        }
      },
      "required": [
        "uniqueCode"
      ]
    },
    "DroolsScript": {
      "title": "Скрипт Drools",
      "allOf": [
        {
          "$ref": "#/definitions/NewDroolsScript"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Уникальный идентификатор скрипта"
            }
          },
          "required": [
            "id"
          ]
        }
      ]
    },
    "NewDroolsScript": {
      "type": "object",
      "title": "Модель загрузки Drools скрипта",
      "properties": {
        "name": {
          "type": "string",
          "description": "Наименование Drools ресурса. Должно быть уникальным."
        },
        "base64Content": {
          "type": "string",
          "description": "Содержимое Drools скрипта. В формате base64."
        },
        "executionPointCode": {
          "type": "string",
          "description": "Код точки выполнения скрипта. "
        }
      },
      "required": [
        "name",
        "base64Content",
        "executionPointCode"
      ]
    },
    "CustomField": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "order": {
          "type": "integer",
          "format": "int64"
        },
        "uniquenessGroup": {
          "type": "string"
        },
        "validation": {
          "type": "string"
        },
        "validationErrorText": {
          "type": "string"
        },
        "params": {
          "$ref": "#/definitions/ObjectNode"
        },
        "default_value": {
          "type": "string"
        },
        "ownerCode": {
          "type": "string"
        }
      }
    },
    "ObjectNode": {
      "type": "object",
      "properties": {},
      "title": "JSON Объект"
    },
    "AuditDiff": {
      "type": "object",
      "properties": {},
      "title": "AuditDiff",
      "description": "Разница значений, относительно предыдущей ревизии (в json формате согласно спецификации https://tools.ietf.org/html/rfc6902)"
    },
    "AuditDifferenceDto": {
      "type": "object",
      "title": "AuditDifferenceDto",
      "description": "DTO записи изменений с разницей значения, относительно предидущей ревизии по RFC 6902 JSON Patch",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Идентификатор записи",
          "format": "int64"
        },
        "operationTime": {
          "type": "integer",
          "description": "Дата и время операции",
          "format": "int64"
        },
        "operation": {
          "type": "string",
          "description": "Тип операции"
        },
        "revision": {
          "description": "Номер ревизии",
          "type": "integer",
          "format": "int64"
        },
        "subjectId": {
          "type": "string",
          "description": "Идентификатор пользователя, кто провел операцию"
        },
        "objectId": {
          "type": "string",
          "description": "Идентификатор объекта, над которым проведена операция"
        },
        "objectType": {
          "type": "string",
          "description": "Тип объекта, над которым проведена операция"
        },
        "diff": {
          "type": "array",
          "description": "Разница значений, относительно предыдущей ревизии (в json формате согласно спецификации https://tools.ietf.org/html/rfc6902)",
          "items": {
            "$ref": "#/definitions/ObjectNode"
          }
        }
      }
    },
    "mi-organization": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "customFields": {
          "type": "object"
        }
      },
      "required": [
        "id"
      ],
      "title": "Организация MI"
    },
    "system-field-output": {
      "title": "SystemField Output",
      "description": "The properties that are included when fetching a list of SystemFields.",
      "allOf": [
        {
          "properties": {
            "code": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "required": [
            "code",
            "name",
            "type"
          ]
        }
      ],
      "type": "object"
    },
    "system-field-output-detailed": {
      "title": "SystemField Output Detailed",
      "description": "The properties that are included when fetching a single SystemField.",
      "allOf": [
        {}
      ],
      "type": "object"
    },
    "field-effect-common": {
      "title": "FieldEffect Common",
      "description": "The properties that are shared amongst all versions of the FieldEffect model.",
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "enum": [
            "COLUMN",
            "VIEW",
            "FILTER",
            "CREATE",
            "UPDATE"
          ]
        },
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "issueTypeId": {
          "type": "integer",
          "format": "int64"
        },
        "fieldCode": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "mode",
        "type",
        "title",
        "issueTypeId",
        "fieldCode",
        "roles"
      ]
    },
    "field-effect-input": {
      "title": "FieldEffect Input",
      "description": "The properties that are allowed when creating or updating a FieldEffect.",
      "allOf": [
        {
          "$ref": "#/definitions/field-effect-common"
        },
        {
          "type": "object",
          "properties": {}
        }
      ]
    },
    "field-effect-output": {
      "title": "FieldEffect Output",
      "description": "The properties that are included when fetching a list of FieldEffects.",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            }
          },
          "required": [
            "id"
          ]
        },
        {
          "$ref": "#/definitions/field-effect-common"
        }
      ]
    },
    "field-effect-output-detailed": {
      "title": "FieldEffect Output Detailed",
      "description": "The properties that are included when fetching a single FieldEffect.",
      "allOf": [
        {
          "$ref": "#/definitions/field-effect-output"
        },
        {
          "type": "object",
          "properties": {}
        }
      ]
    },
    "issue-widget-common": {
      "title": "IssueWidget Common",
      "description": "The properties that are shared amongst all versions of the IssueWidget model.",
      "type": "object",
      "properties": {
        "issueTypeId": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "params": {
          "type": "object"
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "issue-widget-input": {
      "title": "IssueWidget Input",
      "description": "The properties that are allowed when creating or updating a IssueWidget.",
      "allOf": [
        {
          "$ref": "#/definitions/issue-widget-common"
        },
        {
          "type": "object",
          "properties": {}
        }
      ]
    },
    "issue-widget-output": {
      "title": "IssueWidget Output",
      "description": "The properties that are included when fetching a list of IssueWidgets.",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            }
          },
          "required": [
            "id"
          ]
        },
        {
          "$ref": "#/definitions/issue-widget-common"
        }
      ]
    },
    "issue-widget-output-detailed": {
      "title": "IssueWidget Output Detailed",
      "description": "The properties that are included when fetching a single IssueWidget.",
      "allOf": [
        {
          "$ref": "#/definitions/issue-widget-output"
        },
        {
          "type": "object",
          "properties": {}
        }
      ]
    },
    "Status-mapping-dto": {
      "type": "object",
      "title": "StatusMappingDto",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Идентификатор",
          "format": "int64"
        },
        "code": {
          "type": "string",
          "description": "Код типа события"
        },
        "approvalPartsType": {
          "type": "string",
          "description": "Части согласования"
        },
        "statusId": {
          "type": "integer",
          "description": "Идентификатор статуса заявки",
          "format": "int64"
        },
        "issueTypeId": {
          "type": "integer",
          "description": "Идентификатор типа заявки",
          "format": "int64"
        }
      }
    },
    "Input-status-mapping-dto": {
      "type": "object",
      "title": "InputStatusMappingDto",
      "properties": {
        "code": {
          "type": "string",
          "description": "Код (типа задачи для approvalPartsType = ENTER).\nКод (семантики approvalPartsType = COMPLETE)."
        },
        "approvalPartsType": {
          "type": "string",
          "description": "Код типа события",
          "enum": [
            "ENTER",
            "COMPLETE"
          ]
        },
        "statusId": {
          "type": "integer",
          "description": "Идентификатор статуса заявки",
          "format": "int64"
        },
        "issueTypeId": {
          "description": "Идентификатор типа заявки",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "code",
        "approvalPartsType",
        "statusId",
        "issueTypeId"
      ]
    },
    "Issue-link-type-dto": {
      "type": "object",
      "title": "IssueLinkTypeDto",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Идентификатор",
          "format": "int64"
        },
        "code": {
          "type": "string",
          "description": "Код"
        },
        "name": {
          "type": "string",
          "description": "Наименование"
        },
        "description": {
          "type": "string",
          "description": "Описание"
        },
        "outgoingLink": {
          "type": "string",
          "description": "Исходящая связь"
        },
        "incomingLink": {
          "type": "string",
          "description": "Входящая связь"
        }
      },
      "description": "Dto типов связки заявок"
    },
    "Issue-link-dto": {
      "type": "object",
      "title": "IssueLinkDto",
      "description": "Dto связки заявок",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Идентификатор",
          "format": "int64"
        },
        "fromIssueId": {
          "type": "integer",
          "description": "Базовая заявка к которой связывается другая заявка",
          "format": "int64"
        },
        "toIssueId": {
          "type": "integer",
          "description": "Связанная заявка",
          "format": "int64"
        },
        "comment": {
          "type": "string",
          "description": "Комментарий"
        },
        "createDate": {
          "type": "integer",
          "description": "Дата и время создания",
          "format": "int64"
        },
        "issueLinkTypeId": {
          "type": "integer",
          "description": "Тип связывания заявки",
          "format": "int64"
        }
      }
    },
    "Input-issue-link-dto": {
      "type": "object",
      "title": "InputIssueLinkDto",
      "description": "Dto создания связки заявки",
      "properties": {
        "fromIssueId": {
          "type": "integer",
          "description": "Базовая заявка к которой связывается другая заявка",
          "format": "int64"
        },
        "toIssueId": {
          "type": "integer",
          "description": "Связанная заявка",
          "format": "int64"
        },
        "comment": {
          "type": "string",
          "description": "Комментарий"
        },
        "issueLinkTypeId": {
          "type": "integer",
          "description": "Тип связывания заявки",
          "format": "int64"
        }
      },
      "required": [
        "fromIssueId",
        "toIssueId",
        "issueLinkTypeId"
      ]
    },
    "Batch-input-issue-link-dto": {
      "type": "object",
      "title": "BatchInputIssueLinkDto",
      "description": "Dto создания связки заявки",
      "properties": {
        "items": {
          "type": "array",
          "description": "список связки заявки",
          "items": {
            "$ref": "#/definitions/Input-issue-link-dto"
          }
        }
      }
    },
    "IssueTypeInfo": {
      "type": "object",
      "title": "IssueTypeInfo",
      "properties": {
        "key": {
          "type": "string",
          "description": "Ключ типа заявки"
        },
        "id": {
          "type": "integer",
          "description": "Идентификатор"
        },
        "name": {
          "type": "string",
          "description": "Имя сущности"
        },
        "deleted": {
          "type": "boolean",
          "description": "Признак удаления сущности"
        }
      }
    },
    "NewWorflow": {
      "type": "object",
      "title": "new workflow",
      "properties": {
        "name": {
          "type": "string",
          "description": "имя"
        },
        "organizationId": {
          "type": "string",
          "description": "идентификатор организации"
        },
        "default": {
          "type": "boolean",
          "description": "по умолчанию"
        },
        "code": {
          "type": "string",
          "description": "код"
        }
      },
      "required": [
        "name",
        "organizationId"
      ]
    },
    "WorkflowEventDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "default": {
          "type": "boolean"
        },
        "organizationId": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "name": "comments"
    },
    {
      "name": "accesses"
    },
    {
      "name": "Organizations"
    },
    {
      "name": "CustomFields"
    },
    {
      "name": "metadataFields"
    },
    {
      "name": "metadataWidgets"
    },
    {
      "name": "statuses"
    },
    {
      "name": "workflow"
    },
    {
      "name": "workflows"
    },
    {
      "name": "StatusMapping"
    },
    {
      "name": "IssuesLinksTypes"
    },
    {
      "name": "IssuesLinks"
    },
    {
      "name": "Жизненный цикл"
    },
    {
      "name": "Customers"
    },
    {
      "name": "Заказчики"
    },
    {
      "name": "transitions"
    },
    {
      "name": "Security"
    },
    {
      "name": "Разграничение доступа"
    },
    {
      "name": "Issues"
    },
    {
      "name": "Заявки"
    }
  ]
}